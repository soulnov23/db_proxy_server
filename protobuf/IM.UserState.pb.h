// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.UserState.proto

#ifndef PROTOBUF_IM_2eUserState_2eproto__INCLUDED
#define PROTOBUF_IM_2eUserState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "IM.BaseDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace IM {
namespace UserState {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_IM_2eUserState_2eproto();
void protobuf_AssignDesc_IM_2eUserState_2eproto();
void protobuf_ShutdownFile_IM_2eUserState_2eproto();

class UserStatUpdateBroadcastReq;
class UserStatUpdatePush;
class DeviceStatItem;
class UserStatItem;
class ServerPullUsersStat;
class IMUsersStatReq;
class IMUsersStatRsp;
class IMUserStatNotify;
class IMUsersStat_Start_Req;
class IMUsersStat_TempUser_Subs_Req;
class IMUsersStat_TempUser_UnSubs_Req;
class IMCompanyOrgUpdateNotify;

// ===================================================================

class UserStatUpdateBroadcastReq : public ::google::protobuf::MessageLite {
 public:
  UserStatUpdateBroadcastReq();
  virtual ~UserStatUpdateBroadcastReq();

  UserStatUpdateBroadcastReq(const UserStatUpdateBroadcastReq& from);

  inline UserStatUpdateBroadcastReq& operator=(const UserStatUpdateBroadcastReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const UserStatUpdateBroadcastReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UserStatUpdateBroadcastReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UserStatUpdateBroadcastReq* other);

  // implements Message ----------------------------------------------

  UserStatUpdateBroadcastReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserStatUpdateBroadcastReq& from);
  void MergeFrom(const UserStatUpdateBroadcastReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.ClientType client_type = 3;
  inline bool has_client_type() const;
  inline void clear_client_type();
  static const int kClientTypeFieldNumber = 3;
  inline ::IM::BaseDefine::ClientType client_type() const;
  inline void set_client_type(::IM::BaseDefine::ClientType value);

  // required .IM.BaseDefine.UserStatType status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::IM::BaseDefine::UserStatType status() const;
  inline void set_status(::IM::BaseDefine::UserStatType value);

  // required uint32 connsvr_id = 5;
  inline bool has_connsvr_id() const;
  inline void clear_connsvr_id();
  static const int kConnsvrIdFieldNumber = 5;
  inline ::google::protobuf::uint32 connsvr_id() const;
  inline void set_connsvr_id(::google::protobuf::uint32 value);

  // required uint32 connsocket_index = 6;
  inline bool has_connsocket_index() const;
  inline void clear_connsocket_index();
  static const int kConnsocketIndexFieldNumber = 6;
  inline ::google::protobuf::uint32 connsocket_index() const;
  inline void set_connsocket_index(::google::protobuf::uint32 value);

  // required uint64 offline_time = 7;
  inline bool has_offline_time() const;
  inline void clear_offline_time();
  static const int kOfflineTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 offline_time() const;
  inline void set_offline_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:IM.UserState.UserStatUpdateBroadcastReq)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_client_type();
  inline void clear_has_client_type();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_connsvr_id();
  inline void clear_has_connsvr_id();
  inline void set_has_connsocket_index();
  inline void clear_has_connsocket_index();
  inline void set_has_offline_time();
  inline void clear_has_offline_time();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  int client_type_;
  int status_;
  ::google::protobuf::uint32 connsvr_id_;
  ::google::protobuf::uint32 connsocket_index_;
  ::google::protobuf::uint64 offline_time_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static UserStatUpdateBroadcastReq* default_instance_;
};
// -------------------------------------------------------------------

class UserStatUpdatePush : public ::google::protobuf::MessageLite {
 public:
  UserStatUpdatePush();
  virtual ~UserStatUpdatePush();

  UserStatUpdatePush(const UserStatUpdatePush& from);

  inline UserStatUpdatePush& operator=(const UserStatUpdatePush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const UserStatUpdatePush& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UserStatUpdatePush* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UserStatUpdatePush* other);

  // implements Message ----------------------------------------------

  UserStatUpdatePush* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserStatUpdatePush& from);
  void MergeFrom(const UserStatUpdatePush& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.ClientType client_type = 3;
  inline bool has_client_type() const;
  inline void clear_client_type();
  static const int kClientTypeFieldNumber = 3;
  inline ::IM::BaseDefine::ClientType client_type() const;
  inline void set_client_type(::IM::BaseDefine::ClientType value);

  // required .IM.BaseDefine.UserStatType status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::IM::BaseDefine::UserStatType status() const;
  inline void set_status(::IM::BaseDefine::UserStatType value);

  // required uint32 connsvr_id = 5;
  inline bool has_connsvr_id() const;
  inline void clear_connsvr_id();
  static const int kConnsvrIdFieldNumber = 5;
  inline ::google::protobuf::uint32 connsvr_id() const;
  inline void set_connsvr_id(::google::protobuf::uint32 value);

  // required uint32 connsocket_index = 6;
  inline bool has_connsocket_index() const;
  inline void clear_connsocket_index();
  static const int kConnsocketIndexFieldNumber = 6;
  inline ::google::protobuf::uint32 connsocket_index() const;
  inline void set_connsocket_index(::google::protobuf::uint32 value);

  // required uint64 offline_time = 7;
  inline bool has_offline_time() const;
  inline void clear_offline_time();
  static const int kOfflineTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 offline_time() const;
  inline void set_offline_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:IM.UserState.UserStatUpdatePush)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_client_type();
  inline void clear_has_client_type();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_connsvr_id();
  inline void clear_has_connsvr_id();
  inline void set_has_connsocket_index();
  inline void clear_has_connsocket_index();
  inline void set_has_offline_time();
  inline void clear_has_offline_time();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  int client_type_;
  int status_;
  ::google::protobuf::uint32 connsvr_id_;
  ::google::protobuf::uint32 connsocket_index_;
  ::google::protobuf::uint64 offline_time_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static UserStatUpdatePush* default_instance_;
};
// -------------------------------------------------------------------

class DeviceStatItem : public ::google::protobuf::MessageLite {
 public:
  DeviceStatItem();
  virtual ~DeviceStatItem();

  DeviceStatItem(const DeviceStatItem& from);

  inline DeviceStatItem& operator=(const DeviceStatItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeviceStatItem& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeviceStatItem* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeviceStatItem* other);

  // implements Message ----------------------------------------------

  DeviceStatItem* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeviceStatItem& from);
  void MergeFrom(const DeviceStatItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .IM.BaseDefine.UserStatType status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::IM::BaseDefine::UserStatType status() const;
  inline void set_status(::IM::BaseDefine::UserStatType value);

  // required .IM.BaseDefine.ClientType client_type = 2;
  inline bool has_client_type() const;
  inline void clear_client_type();
  static const int kClientTypeFieldNumber = 2;
  inline ::IM::BaseDefine::ClientType client_type() const;
  inline void set_client_type(::IM::BaseDefine::ClientType value);

  // @@protoc_insertion_point(class_scope:IM.UserState.DeviceStatItem)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_client_type();
  inline void clear_has_client_type();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int status_;
  int client_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static DeviceStatItem* default_instance_;
};
// -------------------------------------------------------------------

class UserStatItem : public ::google::protobuf::MessageLite {
 public:
  UserStatItem();
  virtual ~UserStatItem();

  UserStatItem(const UserStatItem& from);

  inline UserStatItem& operator=(const UserStatItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const UserStatItem& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UserStatItem* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UserStatItem* other);

  // implements Message ----------------------------------------------

  UserStatItem* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserStatItem& from);
  void MergeFrom(const UserStatItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .IM.UserState.DeviceStatItem stat_item = 3;
  inline int stat_item_size() const;
  inline void clear_stat_item();
  static const int kStatItemFieldNumber = 3;
  inline const ::IM::UserState::DeviceStatItem& stat_item(int index) const;
  inline ::IM::UserState::DeviceStatItem* mutable_stat_item(int index);
  inline ::IM::UserState::DeviceStatItem* add_stat_item();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::UserState::DeviceStatItem >&
      stat_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::UserState::DeviceStatItem >*
      mutable_stat_item();

  // @@protoc_insertion_point(class_scope:IM.UserState.UserStatItem)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::UserState::DeviceStatItem > stat_item_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static UserStatItem* default_instance_;
};
// -------------------------------------------------------------------

class ServerPullUsersStat : public ::google::protobuf::MessageLite {
 public:
  ServerPullUsersStat();
  virtual ~ServerPullUsersStat();

  ServerPullUsersStat(const ServerPullUsersStat& from);

  inline ServerPullUsersStat& operator=(const ServerPullUsersStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ServerPullUsersStat& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ServerPullUsersStat* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ServerPullUsersStat* other);

  // implements Message ----------------------------------------------

  ServerPullUsersStat* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ServerPullUsersStat& from);
  void MergeFrom(const ServerPullUsersStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 list_type = 1;
  inline bool has_list_type() const;
  inline void clear_list_type();
  static const int kListTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 list_type() const;
  inline void set_list_type(::google::protobuf::uint32 value);

  // repeated .IM.UserState.UserStatItem user_stat_list = 2;
  inline int user_stat_list_size() const;
  inline void clear_user_stat_list();
  static const int kUserStatListFieldNumber = 2;
  inline const ::IM::UserState::UserStatItem& user_stat_list(int index) const;
  inline ::IM::UserState::UserStatItem* mutable_user_stat_list(int index);
  inline ::IM::UserState::UserStatItem* add_user_stat_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem >&
      user_stat_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem >*
      mutable_user_stat_list();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.UserState.ServerPullUsersStat)
 private:
  inline void set_has_list_type();
  inline void clear_has_list_type();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem > user_stat_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 list_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static ServerPullUsersStat* default_instance_;
};
// -------------------------------------------------------------------

class IMUsersStatReq : public ::google::protobuf::MessageLite {
 public:
  IMUsersStatReq();
  virtual ~IMUsersStatReq();

  IMUsersStatReq(const IMUsersStatReq& from);

  inline IMUsersStatReq& operator=(const IMUsersStatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUsersStatReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUsersStatReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUsersStatReq* other);

  // implements Message ----------------------------------------------

  IMUsersStatReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUsersStatReq& from);
  void MergeFrom(const IMUsersStatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .IM.BaseDefine.UserIdItem user_id_list = 3;
  inline int user_id_list_size() const;
  inline void clear_user_id_list();
  static const int kUserIdListFieldNumber = 3;
  inline const ::IM::BaseDefine::UserIdItem& user_id_list(int index) const;
  inline ::IM::BaseDefine::UserIdItem* mutable_user_id_list(int index);
  inline ::IM::BaseDefine::UserIdItem* add_user_id_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >&
      user_id_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >*
      mutable_user_id_list();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.UserState.IMUsersStatReq)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem > user_id_list_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static IMUsersStatReq* default_instance_;
};
// -------------------------------------------------------------------

class IMUsersStatRsp : public ::google::protobuf::MessageLite {
 public:
  IMUsersStatRsp();
  virtual ~IMUsersStatRsp();

  IMUsersStatRsp(const IMUsersStatRsp& from);

  inline IMUsersStatRsp& operator=(const IMUsersStatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUsersStatRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUsersStatRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUsersStatRsp* other);

  // implements Message ----------------------------------------------

  IMUsersStatRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUsersStatRsp& from);
  void MergeFrom(const IMUsersStatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .IM.UserState.UserStatItem user_stat_list = 1;
  inline int user_stat_list_size() const;
  inline void clear_user_stat_list();
  static const int kUserStatListFieldNumber = 1;
  inline const ::IM::UserState::UserStatItem& user_stat_list(int index) const;
  inline ::IM::UserState::UserStatItem* mutable_user_stat_list(int index);
  inline ::IM::UserState::UserStatItem* add_user_stat_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem >&
      user_stat_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem >*
      mutable_user_stat_list();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.UserState.IMUsersStatRsp)
 private:
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem > user_stat_list_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static IMUsersStatRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMUserStatNotify : public ::google::protobuf::MessageLite {
 public:
  IMUserStatNotify();
  virtual ~IMUserStatNotify();

  IMUserStatNotify(const IMUserStatNotify& from);

  inline IMUserStatNotify& operator=(const IMUserStatNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUserStatNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUserStatNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUserStatNotify* other);

  // implements Message ----------------------------------------------

  IMUserStatNotify* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUserStatNotify& from);
  void MergeFrom(const IMUserStatNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .IM.UserState.DeviceStatItem status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline const ::IM::UserState::DeviceStatItem& status() const;
  inline ::IM::UserState::DeviceStatItem* mutable_status();
  inline ::IM::UserState::DeviceStatItem* release_status();
  inline void set_allocated_status(::IM::UserState::DeviceStatItem* status);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.UserState.IMUserStatNotify)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  ::IM::UserState::DeviceStatItem* status_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static IMUserStatNotify* default_instance_;
};
// -------------------------------------------------------------------

class IMUsersStat_Start_Req : public ::google::protobuf::MessageLite {
 public:
  IMUsersStat_Start_Req();
  virtual ~IMUsersStat_Start_Req();

  IMUsersStat_Start_Req(const IMUsersStat_Start_Req& from);

  inline IMUsersStat_Start_Req& operator=(const IMUsersStat_Start_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUsersStat_Start_Req& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUsersStat_Start_Req* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUsersStat_Start_Req* other);

  // implements Message ----------------------------------------------

  IMUsersStat_Start_Req* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUsersStat_Start_Req& from);
  void MergeFrom(const IMUsersStat_Start_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.UserState.IMUsersStat_Start_Req)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static IMUsersStat_Start_Req* default_instance_;
};
// -------------------------------------------------------------------

class IMUsersStat_TempUser_Subs_Req : public ::google::protobuf::MessageLite {
 public:
  IMUsersStat_TempUser_Subs_Req();
  virtual ~IMUsersStat_TempUser_Subs_Req();

  IMUsersStat_TempUser_Subs_Req(const IMUsersStat_TempUser_Subs_Req& from);

  inline IMUsersStat_TempUser_Subs_Req& operator=(const IMUsersStat_TempUser_Subs_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUsersStat_TempUser_Subs_Req& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUsersStat_TempUser_Subs_Req* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUsersStat_TempUser_Subs_Req* other);

  // implements Message ----------------------------------------------

  IMUsersStat_TempUser_Subs_Req* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUsersStat_TempUser_Subs_Req& from);
  void MergeFrom(const IMUsersStat_TempUser_Subs_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .IM.BaseDefine.UserIdItem user_id_list = 3;
  inline int user_id_list_size() const;
  inline void clear_user_id_list();
  static const int kUserIdListFieldNumber = 3;
  inline const ::IM::BaseDefine::UserIdItem& user_id_list(int index) const;
  inline ::IM::BaseDefine::UserIdItem* mutable_user_id_list(int index);
  inline ::IM::BaseDefine::UserIdItem* add_user_id_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >&
      user_id_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >*
      mutable_user_id_list();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.UserState.IMUsersStat_TempUser_Subs_Req)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem > user_id_list_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static IMUsersStat_TempUser_Subs_Req* default_instance_;
};
// -------------------------------------------------------------------

class IMUsersStat_TempUser_UnSubs_Req : public ::google::protobuf::MessageLite {
 public:
  IMUsersStat_TempUser_UnSubs_Req();
  virtual ~IMUsersStat_TempUser_UnSubs_Req();

  IMUsersStat_TempUser_UnSubs_Req(const IMUsersStat_TempUser_UnSubs_Req& from);

  inline IMUsersStat_TempUser_UnSubs_Req& operator=(const IMUsersStat_TempUser_UnSubs_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMUsersStat_TempUser_UnSubs_Req& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMUsersStat_TempUser_UnSubs_Req* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMUsersStat_TempUser_UnSubs_Req* other);

  // implements Message ----------------------------------------------

  IMUsersStat_TempUser_UnSubs_Req* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMUsersStat_TempUser_UnSubs_Req& from);
  void MergeFrom(const IMUsersStat_TempUser_UnSubs_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .IM.BaseDefine.UserIdItem user_id_list = 3;
  inline int user_id_list_size() const;
  inline void clear_user_id_list();
  static const int kUserIdListFieldNumber = 3;
  inline const ::IM::BaseDefine::UserIdItem& user_id_list(int index) const;
  inline ::IM::BaseDefine::UserIdItem* mutable_user_id_list(int index);
  inline ::IM::BaseDefine::UserIdItem* add_user_id_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >&
      user_id_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >*
      mutable_user_id_list();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.UserState.IMUsersStat_TempUser_UnSubs_Req)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem > user_id_list_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static IMUsersStat_TempUser_UnSubs_Req* default_instance_;
};
// -------------------------------------------------------------------

class IMCompanyOrgUpdateNotify : public ::google::protobuf::MessageLite {
 public:
  IMCompanyOrgUpdateNotify();
  virtual ~IMCompanyOrgUpdateNotify();

  IMCompanyOrgUpdateNotify(const IMCompanyOrgUpdateNotify& from);

  inline IMCompanyOrgUpdateNotify& operator=(const IMCompanyOrgUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMCompanyOrgUpdateNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMCompanyOrgUpdateNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMCompanyOrgUpdateNotify* other);

  // implements Message ----------------------------------------------

  IMCompanyOrgUpdateNotify* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMCompanyOrgUpdateNotify& from);
  void MergeFrom(const IMCompanyOrgUpdateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.UserState.IMCompanyOrgUpdateNotify)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eUserState_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eUserState_2eproto();
  friend void protobuf_ShutdownFile_IM_2eUserState_2eproto();

  void InitAsDefaultInstance();
  static IMCompanyOrgUpdateNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// UserStatUpdateBroadcastReq

// required uint32 company_id = 1;
inline bool UserStatUpdateBroadcastReq::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStatUpdateBroadcastReq::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStatUpdateBroadcastReq::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStatUpdateBroadcastReq::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 UserStatUpdateBroadcastReq::company_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdateBroadcastReq.company_id)
  return company_id_;
}
inline void UserStatUpdateBroadcastReq::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdateBroadcastReq.company_id)
}

// required uint32 user_id = 2;
inline bool UserStatUpdateBroadcastReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserStatUpdateBroadcastReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserStatUpdateBroadcastReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserStatUpdateBroadcastReq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UserStatUpdateBroadcastReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdateBroadcastReq.user_id)
  return user_id_;
}
inline void UserStatUpdateBroadcastReq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdateBroadcastReq.user_id)
}

// required .IM.BaseDefine.ClientType client_type = 3;
inline bool UserStatUpdateBroadcastReq::has_client_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserStatUpdateBroadcastReq::set_has_client_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserStatUpdateBroadcastReq::clear_has_client_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserStatUpdateBroadcastReq::clear_client_type() {
  client_type_ = 1;
  clear_has_client_type();
}
inline ::IM::BaseDefine::ClientType UserStatUpdateBroadcastReq::client_type() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdateBroadcastReq.client_type)
  return static_cast< ::IM::BaseDefine::ClientType >(client_type_);
}
inline void UserStatUpdateBroadcastReq::set_client_type(::IM::BaseDefine::ClientType value) {
  assert(::IM::BaseDefine::ClientType_IsValid(value));
  set_has_client_type();
  client_type_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdateBroadcastReq.client_type)
}

// required .IM.BaseDefine.UserStatType status = 4;
inline bool UserStatUpdateBroadcastReq::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserStatUpdateBroadcastReq::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserStatUpdateBroadcastReq::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserStatUpdateBroadcastReq::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::IM::BaseDefine::UserStatType UserStatUpdateBroadcastReq::status() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdateBroadcastReq.status)
  return static_cast< ::IM::BaseDefine::UserStatType >(status_);
}
inline void UserStatUpdateBroadcastReq::set_status(::IM::BaseDefine::UserStatType value) {
  assert(::IM::BaseDefine::UserStatType_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdateBroadcastReq.status)
}

// required uint32 connsvr_id = 5;
inline bool UserStatUpdateBroadcastReq::has_connsvr_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserStatUpdateBroadcastReq::set_has_connsvr_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserStatUpdateBroadcastReq::clear_has_connsvr_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserStatUpdateBroadcastReq::clear_connsvr_id() {
  connsvr_id_ = 0u;
  clear_has_connsvr_id();
}
inline ::google::protobuf::uint32 UserStatUpdateBroadcastReq::connsvr_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdateBroadcastReq.connsvr_id)
  return connsvr_id_;
}
inline void UserStatUpdateBroadcastReq::set_connsvr_id(::google::protobuf::uint32 value) {
  set_has_connsvr_id();
  connsvr_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdateBroadcastReq.connsvr_id)
}

// required uint32 connsocket_index = 6;
inline bool UserStatUpdateBroadcastReq::has_connsocket_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserStatUpdateBroadcastReq::set_has_connsocket_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserStatUpdateBroadcastReq::clear_has_connsocket_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserStatUpdateBroadcastReq::clear_connsocket_index() {
  connsocket_index_ = 0u;
  clear_has_connsocket_index();
}
inline ::google::protobuf::uint32 UserStatUpdateBroadcastReq::connsocket_index() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdateBroadcastReq.connsocket_index)
  return connsocket_index_;
}
inline void UserStatUpdateBroadcastReq::set_connsocket_index(::google::protobuf::uint32 value) {
  set_has_connsocket_index();
  connsocket_index_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdateBroadcastReq.connsocket_index)
}

// required uint64 offline_time = 7;
inline bool UserStatUpdateBroadcastReq::has_offline_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserStatUpdateBroadcastReq::set_has_offline_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserStatUpdateBroadcastReq::clear_has_offline_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserStatUpdateBroadcastReq::clear_offline_time() {
  offline_time_ = GOOGLE_ULONGLONG(0);
  clear_has_offline_time();
}
inline ::google::protobuf::uint64 UserStatUpdateBroadcastReq::offline_time() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdateBroadcastReq.offline_time)
  return offline_time_;
}
inline void UserStatUpdateBroadcastReq::set_offline_time(::google::protobuf::uint64 value) {
  set_has_offline_time();
  offline_time_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdateBroadcastReq.offline_time)
}

// -------------------------------------------------------------------

// UserStatUpdatePush

// required uint32 company_id = 1;
inline bool UserStatUpdatePush::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStatUpdatePush::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStatUpdatePush::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStatUpdatePush::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 UserStatUpdatePush::company_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdatePush.company_id)
  return company_id_;
}
inline void UserStatUpdatePush::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdatePush.company_id)
}

// required uint32 user_id = 2;
inline bool UserStatUpdatePush::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserStatUpdatePush::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserStatUpdatePush::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserStatUpdatePush::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UserStatUpdatePush::user_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdatePush.user_id)
  return user_id_;
}
inline void UserStatUpdatePush::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdatePush.user_id)
}

// required .IM.BaseDefine.ClientType client_type = 3;
inline bool UserStatUpdatePush::has_client_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserStatUpdatePush::set_has_client_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserStatUpdatePush::clear_has_client_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserStatUpdatePush::clear_client_type() {
  client_type_ = 1;
  clear_has_client_type();
}
inline ::IM::BaseDefine::ClientType UserStatUpdatePush::client_type() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdatePush.client_type)
  return static_cast< ::IM::BaseDefine::ClientType >(client_type_);
}
inline void UserStatUpdatePush::set_client_type(::IM::BaseDefine::ClientType value) {
  assert(::IM::BaseDefine::ClientType_IsValid(value));
  set_has_client_type();
  client_type_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdatePush.client_type)
}

// required .IM.BaseDefine.UserStatType status = 4;
inline bool UserStatUpdatePush::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserStatUpdatePush::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserStatUpdatePush::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserStatUpdatePush::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::IM::BaseDefine::UserStatType UserStatUpdatePush::status() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdatePush.status)
  return static_cast< ::IM::BaseDefine::UserStatType >(status_);
}
inline void UserStatUpdatePush::set_status(::IM::BaseDefine::UserStatType value) {
  assert(::IM::BaseDefine::UserStatType_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdatePush.status)
}

// required uint32 connsvr_id = 5;
inline bool UserStatUpdatePush::has_connsvr_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserStatUpdatePush::set_has_connsvr_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserStatUpdatePush::clear_has_connsvr_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserStatUpdatePush::clear_connsvr_id() {
  connsvr_id_ = 0u;
  clear_has_connsvr_id();
}
inline ::google::protobuf::uint32 UserStatUpdatePush::connsvr_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdatePush.connsvr_id)
  return connsvr_id_;
}
inline void UserStatUpdatePush::set_connsvr_id(::google::protobuf::uint32 value) {
  set_has_connsvr_id();
  connsvr_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdatePush.connsvr_id)
}

// required uint32 connsocket_index = 6;
inline bool UserStatUpdatePush::has_connsocket_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserStatUpdatePush::set_has_connsocket_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserStatUpdatePush::clear_has_connsocket_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserStatUpdatePush::clear_connsocket_index() {
  connsocket_index_ = 0u;
  clear_has_connsocket_index();
}
inline ::google::protobuf::uint32 UserStatUpdatePush::connsocket_index() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdatePush.connsocket_index)
  return connsocket_index_;
}
inline void UserStatUpdatePush::set_connsocket_index(::google::protobuf::uint32 value) {
  set_has_connsocket_index();
  connsocket_index_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdatePush.connsocket_index)
}

// required uint64 offline_time = 7;
inline bool UserStatUpdatePush::has_offline_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserStatUpdatePush::set_has_offline_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserStatUpdatePush::clear_has_offline_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserStatUpdatePush::clear_offline_time() {
  offline_time_ = GOOGLE_ULONGLONG(0);
  clear_has_offline_time();
}
inline ::google::protobuf::uint64 UserStatUpdatePush::offline_time() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatUpdatePush.offline_time)
  return offline_time_;
}
inline void UserStatUpdatePush::set_offline_time(::google::protobuf::uint64 value) {
  set_has_offline_time();
  offline_time_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatUpdatePush.offline_time)
}

// -------------------------------------------------------------------

// DeviceStatItem

// required .IM.BaseDefine.UserStatType status = 1;
inline bool DeviceStatItem::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeviceStatItem::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeviceStatItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeviceStatItem::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::IM::BaseDefine::UserStatType DeviceStatItem::status() const {
  // @@protoc_insertion_point(field_get:IM.UserState.DeviceStatItem.status)
  return static_cast< ::IM::BaseDefine::UserStatType >(status_);
}
inline void DeviceStatItem::set_status(::IM::BaseDefine::UserStatType value) {
  assert(::IM::BaseDefine::UserStatType_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.DeviceStatItem.status)
}

// required .IM.BaseDefine.ClientType client_type = 2;
inline bool DeviceStatItem::has_client_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeviceStatItem::set_has_client_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeviceStatItem::clear_has_client_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeviceStatItem::clear_client_type() {
  client_type_ = 1;
  clear_has_client_type();
}
inline ::IM::BaseDefine::ClientType DeviceStatItem::client_type() const {
  // @@protoc_insertion_point(field_get:IM.UserState.DeviceStatItem.client_type)
  return static_cast< ::IM::BaseDefine::ClientType >(client_type_);
}
inline void DeviceStatItem::set_client_type(::IM::BaseDefine::ClientType value) {
  assert(::IM::BaseDefine::ClientType_IsValid(value));
  set_has_client_type();
  client_type_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.DeviceStatItem.client_type)
}

// -------------------------------------------------------------------

// UserStatItem

// required uint32 company_id = 1;
inline bool UserStatItem::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStatItem::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStatItem::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStatItem::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 UserStatItem::company_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatItem.company_id)
  return company_id_;
}
inline void UserStatItem::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatItem.company_id)
}

// required uint32 user_id = 2;
inline bool UserStatItem::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserStatItem::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserStatItem::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserStatItem::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UserStatItem::user_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatItem.user_id)
  return user_id_;
}
inline void UserStatItem::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.UserStatItem.user_id)
}

// repeated .IM.UserState.DeviceStatItem stat_item = 3;
inline int UserStatItem::stat_item_size() const {
  return stat_item_.size();
}
inline void UserStatItem::clear_stat_item() {
  stat_item_.Clear();
}
inline const ::IM::UserState::DeviceStatItem& UserStatItem::stat_item(int index) const {
  // @@protoc_insertion_point(field_get:IM.UserState.UserStatItem.stat_item)
  return stat_item_.Get(index);
}
inline ::IM::UserState::DeviceStatItem* UserStatItem::mutable_stat_item(int index) {
  // @@protoc_insertion_point(field_mutable:IM.UserState.UserStatItem.stat_item)
  return stat_item_.Mutable(index);
}
inline ::IM::UserState::DeviceStatItem* UserStatItem::add_stat_item() {
  // @@protoc_insertion_point(field_add:IM.UserState.UserStatItem.stat_item)
  return stat_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::UserState::DeviceStatItem >&
UserStatItem::stat_item() const {
  // @@protoc_insertion_point(field_list:IM.UserState.UserStatItem.stat_item)
  return stat_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::UserState::DeviceStatItem >*
UserStatItem::mutable_stat_item() {
  // @@protoc_insertion_point(field_mutable_list:IM.UserState.UserStatItem.stat_item)
  return &stat_item_;
}

// -------------------------------------------------------------------

// ServerPullUsersStat

// required uint32 list_type = 1;
inline bool ServerPullUsersStat::has_list_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerPullUsersStat::set_has_list_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerPullUsersStat::clear_has_list_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerPullUsersStat::clear_list_type() {
  list_type_ = 0u;
  clear_has_list_type();
}
inline ::google::protobuf::uint32 ServerPullUsersStat::list_type() const {
  // @@protoc_insertion_point(field_get:IM.UserState.ServerPullUsersStat.list_type)
  return list_type_;
}
inline void ServerPullUsersStat::set_list_type(::google::protobuf::uint32 value) {
  set_has_list_type();
  list_type_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.ServerPullUsersStat.list_type)
}

// repeated .IM.UserState.UserStatItem user_stat_list = 2;
inline int ServerPullUsersStat::user_stat_list_size() const {
  return user_stat_list_.size();
}
inline void ServerPullUsersStat::clear_user_stat_list() {
  user_stat_list_.Clear();
}
inline const ::IM::UserState::UserStatItem& ServerPullUsersStat::user_stat_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.UserState.ServerPullUsersStat.user_stat_list)
  return user_stat_list_.Get(index);
}
inline ::IM::UserState::UserStatItem* ServerPullUsersStat::mutable_user_stat_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.UserState.ServerPullUsersStat.user_stat_list)
  return user_stat_list_.Mutable(index);
}
inline ::IM::UserState::UserStatItem* ServerPullUsersStat::add_user_stat_list() {
  // @@protoc_insertion_point(field_add:IM.UserState.ServerPullUsersStat.user_stat_list)
  return user_stat_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem >&
ServerPullUsersStat::user_stat_list() const {
  // @@protoc_insertion_point(field_list:IM.UserState.ServerPullUsersStat.user_stat_list)
  return user_stat_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem >*
ServerPullUsersStat::mutable_user_stat_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.UserState.ServerPullUsersStat.user_stat_list)
  return &user_stat_list_;
}

// optional bytes attach_data = 20;
inline bool ServerPullUsersStat::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerPullUsersStat::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerPullUsersStat::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerPullUsersStat::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& ServerPullUsersStat::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.UserState.ServerPullUsersStat.attach_data)
  return *attach_data_;
}
inline void ServerPullUsersStat::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.UserState.ServerPullUsersStat.attach_data)
}
inline void ServerPullUsersStat::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.UserState.ServerPullUsersStat.attach_data)
}
inline void ServerPullUsersStat::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.UserState.ServerPullUsersStat.attach_data)
}
inline ::std::string* ServerPullUsersStat::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.UserState.ServerPullUsersStat.attach_data)
  return attach_data_;
}
inline ::std::string* ServerPullUsersStat::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerPullUsersStat::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.UserState.ServerPullUsersStat.attach_data)
}

// -------------------------------------------------------------------

// IMUsersStatReq

// required uint32 company_id = 1;
inline bool IMUsersStatReq::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUsersStatReq::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUsersStatReq::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUsersStatReq::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 IMUsersStatReq::company_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStatReq.company_id)
  return company_id_;
}
inline void IMUsersStatReq::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStatReq.company_id)
}

// required uint32 user_id = 2;
inline bool IMUsersStatReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUsersStatReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUsersStatReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUsersStatReq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 IMUsersStatReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStatReq.user_id)
  return user_id_;
}
inline void IMUsersStatReq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStatReq.user_id)
}

// repeated .IM.BaseDefine.UserIdItem user_id_list = 3;
inline int IMUsersStatReq::user_id_list_size() const {
  return user_id_list_.size();
}
inline void IMUsersStatReq::clear_user_id_list() {
  user_id_list_.Clear();
}
inline const ::IM::BaseDefine::UserIdItem& IMUsersStatReq::user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStatReq.user_id_list)
  return user_id_list_.Get(index);
}
inline ::IM::BaseDefine::UserIdItem* IMUsersStatReq::mutable_user_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUsersStatReq.user_id_list)
  return user_id_list_.Mutable(index);
}
inline ::IM::BaseDefine::UserIdItem* IMUsersStatReq::add_user_id_list() {
  // @@protoc_insertion_point(field_add:IM.UserState.IMUsersStatReq.user_id_list)
  return user_id_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >&
IMUsersStatReq::user_id_list() const {
  // @@protoc_insertion_point(field_list:IM.UserState.IMUsersStatReq.user_id_list)
  return user_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >*
IMUsersStatReq::mutable_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.UserState.IMUsersStatReq.user_id_list)
  return &user_id_list_;
}

// optional bytes attach_data = 20;
inline bool IMUsersStatReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMUsersStatReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMUsersStatReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMUsersStatReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUsersStatReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStatReq.attach_data)
  return *attach_data_;
}
inline void IMUsersStatReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStatReq.attach_data)
}
inline void IMUsersStatReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.UserState.IMUsersStatReq.attach_data)
}
inline void IMUsersStatReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.UserState.IMUsersStatReq.attach_data)
}
inline ::std::string* IMUsersStatReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUsersStatReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMUsersStatReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUsersStatReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.UserState.IMUsersStatReq.attach_data)
}

// -------------------------------------------------------------------

// IMUsersStatRsp

// repeated .IM.UserState.UserStatItem user_stat_list = 1;
inline int IMUsersStatRsp::user_stat_list_size() const {
  return user_stat_list_.size();
}
inline void IMUsersStatRsp::clear_user_stat_list() {
  user_stat_list_.Clear();
}
inline const ::IM::UserState::UserStatItem& IMUsersStatRsp::user_stat_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStatRsp.user_stat_list)
  return user_stat_list_.Get(index);
}
inline ::IM::UserState::UserStatItem* IMUsersStatRsp::mutable_user_stat_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUsersStatRsp.user_stat_list)
  return user_stat_list_.Mutable(index);
}
inline ::IM::UserState::UserStatItem* IMUsersStatRsp::add_user_stat_list() {
  // @@protoc_insertion_point(field_add:IM.UserState.IMUsersStatRsp.user_stat_list)
  return user_stat_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem >&
IMUsersStatRsp::user_stat_list() const {
  // @@protoc_insertion_point(field_list:IM.UserState.IMUsersStatRsp.user_stat_list)
  return user_stat_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::UserState::UserStatItem >*
IMUsersStatRsp::mutable_user_stat_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.UserState.IMUsersStatRsp.user_stat_list)
  return &user_stat_list_;
}

// optional bytes attach_data = 20;
inline bool IMUsersStatRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUsersStatRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUsersStatRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUsersStatRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUsersStatRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStatRsp.attach_data)
  return *attach_data_;
}
inline void IMUsersStatRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStatRsp.attach_data)
}
inline void IMUsersStatRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.UserState.IMUsersStatRsp.attach_data)
}
inline void IMUsersStatRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.UserState.IMUsersStatRsp.attach_data)
}
inline ::std::string* IMUsersStatRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUsersStatRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMUsersStatRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUsersStatRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.UserState.IMUsersStatRsp.attach_data)
}

// -------------------------------------------------------------------

// IMUserStatNotify

// required uint32 company_id = 1;
inline bool IMUserStatNotify::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUserStatNotify::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUserStatNotify::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUserStatNotify::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 IMUserStatNotify::company_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUserStatNotify.company_id)
  return company_id_;
}
inline void IMUserStatNotify::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUserStatNotify.company_id)
}

// required uint32 user_id = 2;
inline bool IMUserStatNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUserStatNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUserStatNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUserStatNotify::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 IMUserStatNotify::user_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUserStatNotify.user_id)
  return user_id_;
}
inline void IMUserStatNotify::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUserStatNotify.user_id)
}

// required .IM.UserState.DeviceStatItem status = 3;
inline bool IMUserStatNotify::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMUserStatNotify::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMUserStatNotify::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMUserStatNotify::clear_status() {
  if (status_ != NULL) status_->::IM::UserState::DeviceStatItem::Clear();
  clear_has_status();
}
inline const ::IM::UserState::DeviceStatItem& IMUserStatNotify::status() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUserStatNotify.status)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return status_ != NULL ? *status_ : *default_instance().status_;
#else
  return status_ != NULL ? *status_ : *default_instance_->status_;
#endif
}
inline ::IM::UserState::DeviceStatItem* IMUserStatNotify::mutable_status() {
  set_has_status();
  if (status_ == NULL) status_ = new ::IM::UserState::DeviceStatItem;
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUserStatNotify.status)
  return status_;
}
inline ::IM::UserState::DeviceStatItem* IMUserStatNotify::release_status() {
  clear_has_status();
  ::IM::UserState::DeviceStatItem* temp = status_;
  status_ = NULL;
  return temp;
}
inline void IMUserStatNotify::set_allocated_status(::IM::UserState::DeviceStatItem* status) {
  delete status_;
  status_ = status;
  if (status) {
    set_has_status();
  } else {
    clear_has_status();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.UserState.IMUserStatNotify.status)
}

// optional bytes attach_data = 20;
inline bool IMUserStatNotify::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMUserStatNotify::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMUserStatNotify::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMUserStatNotify::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUserStatNotify::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUserStatNotify.attach_data)
  return *attach_data_;
}
inline void IMUserStatNotify::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.UserState.IMUserStatNotify.attach_data)
}
inline void IMUserStatNotify::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.UserState.IMUserStatNotify.attach_data)
}
inline void IMUserStatNotify::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.UserState.IMUserStatNotify.attach_data)
}
inline ::std::string* IMUserStatNotify::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUserStatNotify.attach_data)
  return attach_data_;
}
inline ::std::string* IMUserStatNotify::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUserStatNotify::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.UserState.IMUserStatNotify.attach_data)
}

// -------------------------------------------------------------------

// IMUsersStat_Start_Req

// required uint32 company_id = 1;
inline bool IMUsersStat_Start_Req::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUsersStat_Start_Req::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUsersStat_Start_Req::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUsersStat_Start_Req::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 IMUsersStat_Start_Req::company_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_Start_Req.company_id)
  return company_id_;
}
inline void IMUsersStat_Start_Req::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStat_Start_Req.company_id)
}

// required uint32 user_id = 2;
inline bool IMUsersStat_Start_Req::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUsersStat_Start_Req::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUsersStat_Start_Req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUsersStat_Start_Req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 IMUsersStat_Start_Req::user_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_Start_Req.user_id)
  return user_id_;
}
inline void IMUsersStat_Start_Req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStat_Start_Req.user_id)
}

// optional bytes attach_data = 20;
inline bool IMUsersStat_Start_Req::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMUsersStat_Start_Req::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMUsersStat_Start_Req::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMUsersStat_Start_Req::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUsersStat_Start_Req::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_Start_Req.attach_data)
  return *attach_data_;
}
inline void IMUsersStat_Start_Req::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStat_Start_Req.attach_data)
}
inline void IMUsersStat_Start_Req::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.UserState.IMUsersStat_Start_Req.attach_data)
}
inline void IMUsersStat_Start_Req::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.UserState.IMUsersStat_Start_Req.attach_data)
}
inline ::std::string* IMUsersStat_Start_Req::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUsersStat_Start_Req.attach_data)
  return attach_data_;
}
inline ::std::string* IMUsersStat_Start_Req::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUsersStat_Start_Req::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.UserState.IMUsersStat_Start_Req.attach_data)
}

// -------------------------------------------------------------------

// IMUsersStat_TempUser_Subs_Req

// required uint32 company_id = 1;
inline bool IMUsersStat_TempUser_Subs_Req::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUsersStat_TempUser_Subs_Req::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUsersStat_TempUser_Subs_Req::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUsersStat_TempUser_Subs_Req::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 IMUsersStat_TempUser_Subs_Req::company_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_TempUser_Subs_Req.company_id)
  return company_id_;
}
inline void IMUsersStat_TempUser_Subs_Req::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStat_TempUser_Subs_Req.company_id)
}

// required uint32 user_id = 2;
inline bool IMUsersStat_TempUser_Subs_Req::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUsersStat_TempUser_Subs_Req::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUsersStat_TempUser_Subs_Req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUsersStat_TempUser_Subs_Req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 IMUsersStat_TempUser_Subs_Req::user_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_TempUser_Subs_Req.user_id)
  return user_id_;
}
inline void IMUsersStat_TempUser_Subs_Req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStat_TempUser_Subs_Req.user_id)
}

// repeated .IM.BaseDefine.UserIdItem user_id_list = 3;
inline int IMUsersStat_TempUser_Subs_Req::user_id_list_size() const {
  return user_id_list_.size();
}
inline void IMUsersStat_TempUser_Subs_Req::clear_user_id_list() {
  user_id_list_.Clear();
}
inline const ::IM::BaseDefine::UserIdItem& IMUsersStat_TempUser_Subs_Req::user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_TempUser_Subs_Req.user_id_list)
  return user_id_list_.Get(index);
}
inline ::IM::BaseDefine::UserIdItem* IMUsersStat_TempUser_Subs_Req::mutable_user_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUsersStat_TempUser_Subs_Req.user_id_list)
  return user_id_list_.Mutable(index);
}
inline ::IM::BaseDefine::UserIdItem* IMUsersStat_TempUser_Subs_Req::add_user_id_list() {
  // @@protoc_insertion_point(field_add:IM.UserState.IMUsersStat_TempUser_Subs_Req.user_id_list)
  return user_id_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >&
IMUsersStat_TempUser_Subs_Req::user_id_list() const {
  // @@protoc_insertion_point(field_list:IM.UserState.IMUsersStat_TempUser_Subs_Req.user_id_list)
  return user_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >*
IMUsersStat_TempUser_Subs_Req::mutable_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.UserState.IMUsersStat_TempUser_Subs_Req.user_id_list)
  return &user_id_list_;
}

// optional bytes attach_data = 20;
inline bool IMUsersStat_TempUser_Subs_Req::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMUsersStat_TempUser_Subs_Req::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMUsersStat_TempUser_Subs_Req::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMUsersStat_TempUser_Subs_Req::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUsersStat_TempUser_Subs_Req::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_TempUser_Subs_Req.attach_data)
  return *attach_data_;
}
inline void IMUsersStat_TempUser_Subs_Req::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStat_TempUser_Subs_Req.attach_data)
}
inline void IMUsersStat_TempUser_Subs_Req::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.UserState.IMUsersStat_TempUser_Subs_Req.attach_data)
}
inline void IMUsersStat_TempUser_Subs_Req::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.UserState.IMUsersStat_TempUser_Subs_Req.attach_data)
}
inline ::std::string* IMUsersStat_TempUser_Subs_Req::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUsersStat_TempUser_Subs_Req.attach_data)
  return attach_data_;
}
inline ::std::string* IMUsersStat_TempUser_Subs_Req::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUsersStat_TempUser_Subs_Req::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.UserState.IMUsersStat_TempUser_Subs_Req.attach_data)
}

// -------------------------------------------------------------------

// IMUsersStat_TempUser_UnSubs_Req

// required uint32 company_id = 1;
inline bool IMUsersStat_TempUser_UnSubs_Req::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMUsersStat_TempUser_UnSubs_Req::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMUsersStat_TempUser_UnSubs_Req::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMUsersStat_TempUser_UnSubs_Req::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 IMUsersStat_TempUser_UnSubs_Req::company_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.company_id)
  return company_id_;
}
inline void IMUsersStat_TempUser_UnSubs_Req::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.company_id)
}

// required uint32 user_id = 2;
inline bool IMUsersStat_TempUser_UnSubs_Req::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMUsersStat_TempUser_UnSubs_Req::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMUsersStat_TempUser_UnSubs_Req::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMUsersStat_TempUser_UnSubs_Req::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 IMUsersStat_TempUser_UnSubs_Req::user_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.user_id)
  return user_id_;
}
inline void IMUsersStat_TempUser_UnSubs_Req::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.user_id)
}

// repeated .IM.BaseDefine.UserIdItem user_id_list = 3;
inline int IMUsersStat_TempUser_UnSubs_Req::user_id_list_size() const {
  return user_id_list_.size();
}
inline void IMUsersStat_TempUser_UnSubs_Req::clear_user_id_list() {
  user_id_list_.Clear();
}
inline const ::IM::BaseDefine::UserIdItem& IMUsersStat_TempUser_UnSubs_Req::user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.user_id_list)
  return user_id_list_.Get(index);
}
inline ::IM::BaseDefine::UserIdItem* IMUsersStat_TempUser_UnSubs_Req::mutable_user_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.user_id_list)
  return user_id_list_.Mutable(index);
}
inline ::IM::BaseDefine::UserIdItem* IMUsersStat_TempUser_UnSubs_Req::add_user_id_list() {
  // @@protoc_insertion_point(field_add:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.user_id_list)
  return user_id_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >&
IMUsersStat_TempUser_UnSubs_Req::user_id_list() const {
  // @@protoc_insertion_point(field_list:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.user_id_list)
  return user_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >*
IMUsersStat_TempUser_UnSubs_Req::mutable_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.user_id_list)
  return &user_id_list_;
}

// optional bytes attach_data = 20;
inline bool IMUsersStat_TempUser_UnSubs_Req::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMUsersStat_TempUser_UnSubs_Req::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMUsersStat_TempUser_UnSubs_Req::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMUsersStat_TempUser_UnSubs_Req::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMUsersStat_TempUser_UnSubs_Req::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.attach_data)
  return *attach_data_;
}
inline void IMUsersStat_TempUser_UnSubs_Req::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.attach_data)
}
inline void IMUsersStat_TempUser_UnSubs_Req::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.attach_data)
}
inline void IMUsersStat_TempUser_UnSubs_Req::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.attach_data)
}
inline ::std::string* IMUsersStat_TempUser_UnSubs_Req::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.attach_data)
  return attach_data_;
}
inline ::std::string* IMUsersStat_TempUser_UnSubs_Req::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMUsersStat_TempUser_UnSubs_Req::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.UserState.IMUsersStat_TempUser_UnSubs_Req.attach_data)
}

// -------------------------------------------------------------------

// IMCompanyOrgUpdateNotify

// required uint32 company_id = 1;
inline bool IMCompanyOrgUpdateNotify::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMCompanyOrgUpdateNotify::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMCompanyOrgUpdateNotify::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMCompanyOrgUpdateNotify::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 IMCompanyOrgUpdateNotify::company_id() const {
  // @@protoc_insertion_point(field_get:IM.UserState.IMCompanyOrgUpdateNotify.company_id)
  return company_id_;
}
inline void IMCompanyOrgUpdateNotify::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.UserState.IMCompanyOrgUpdateNotify.company_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace UserState
}  // namespace IM

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IM_2eUserState_2eproto__INCLUDED
