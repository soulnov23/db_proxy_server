// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Message.proto

#ifndef PROTOBUF_IM_2eMessage_2eproto__INCLUDED
#define PROTOBUF_IM_2eMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "IM.BaseDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace IM {
namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_IM_2eMessage_2eproto();
void protobuf_AssignDesc_IM_2eMessage_2eproto();
void protobuf_ShutdownFile_IM_2eMessage_2eproto();

class IMMsg;
class GTCMsg;
class IMMsgRecvAck;
class IMMsgOptNotify;
class IMMsgReceiptListReq;
class IMMsgReceiptListRsp;
class IMOfflineMsgCntReq;
class IMOfflineMsgCntRsp;
class IMGetMsgDataListReq;
class IMGetMsgDataListRsp;
class IMGetLatestMsgIdReq;
class IMGetLatestMsgIdRsp;
class IMGetMsgByIdReq;
class IMGetMsgByIdRsp;
class IMP2PCmdMsg;

// ===================================================================

class IMMsg : public ::google::protobuf::MessageLite {
 public:
  IMMsg();
  virtual ~IMMsg();

  IMMsg(const IMMsg& from);

  inline IMMsg& operator=(const IMMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsg* other);

  // implements Message ----------------------------------------------

  IMMsg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsg& from);
  void MergeFrom(const IMMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .IM.BaseDefine.MsgData msg_data = 1;
  inline bool has_msg_data() const;
  inline void clear_msg_data();
  static const int kMsgDataFieldNumber = 1;
  inline const ::IM::BaseDefine::MsgData& msg_data() const;
  inline ::IM::BaseDefine::MsgData* mutable_msg_data();
  inline ::IM::BaseDefine::MsgData* release_msg_data();
  inline void set_allocated_msg_data(::IM::BaseDefine::MsgData* msg_data);

  // optional bytes attach_data = 11;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 11;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsg)
 private:
  inline void set_has_msg_data();
  inline void clear_has_msg_data();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::IM::BaseDefine::MsgData* msg_data_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsg* default_instance_;
};
// -------------------------------------------------------------------

class GTCMsg : public ::google::protobuf::MessageLite {
 public:
  GTCMsg();
  virtual ~GTCMsg();

  GTCMsg(const GTCMsg& from);

  inline GTCMsg& operator=(const GTCMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GTCMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GTCMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GTCMsg* other);

  // implements Message ----------------------------------------------

  GTCMsg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GTCMsg& from);
  void MergeFrom(const GTCMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .IM.Message.IMMsg msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::IM::Message::IMMsg& msg() const;
  inline ::IM::Message::IMMsg* mutable_msg();
  inline ::IM::Message::IMMsg* release_msg();
  inline void set_allocated_msg(::IM::Message::IMMsg* msg);

  // repeated uint32 socket_id = 2;
  inline int socket_id_size() const;
  inline void clear_socket_id();
  static const int kSocketIdFieldNumber = 2;
  inline ::google::protobuf::uint32 socket_id(int index) const;
  inline void set_socket_id(int index, ::google::protobuf::uint32 value);
  inline void add_socket_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      socket_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_socket_id();

  // @@protoc_insertion_point(class_scope:IM.Message.GTCMsg)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::IM::Message::IMMsg* msg_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > socket_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static GTCMsg* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgRecvAck : public ::google::protobuf::MessageLite {
 public:
  IMMsgRecvAck();
  virtual ~IMMsgRecvAck();

  IMMsgRecvAck(const IMMsgRecvAck& from);

  inline IMMsgRecvAck& operator=(const IMMsgRecvAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgRecvAck& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgRecvAck* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgRecvAck* other);

  // implements Message ----------------------------------------------

  IMMsgRecvAck* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgRecvAck& from);
  void MergeFrom(const IMMsgRecvAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 from_company_id = 1;
  inline bool has_from_company_id() const;
  inline void clear_from_company_id();
  static const int kFromCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 from_company_id() const;
  inline void set_from_company_id(::google::protobuf::uint32 value);

  // required uint32 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // required uint32 to_company_id = 3;
  inline bool has_to_company_id() const;
  inline void clear_to_company_id();
  static const int kToCompanyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 to_company_id() const;
  inline void set_to_company_id(::google::protobuf::uint32 value);

  // required uint32 to_user_id = 4;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 4;
  inline ::google::protobuf::uint32 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 5;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 5;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required string msg_id = 6;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 6;
  inline const ::std::string& msg_id() const;
  inline void set_msg_id(const ::std::string& value);
  inline void set_msg_id(const char* value);
  inline void set_msg_id(const char* value, size_t size);
  inline ::std::string* mutable_msg_id();
  inline ::std::string* release_msg_id();
  inline void set_allocated_msg_id(::std::string* msg_id);

  // optional bytes attach_data = 7;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 7;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgRecvAck)
 private:
  inline void set_has_from_company_id();
  inline void clear_has_from_company_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_company_id();
  inline void clear_has_to_company_id();
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 from_company_id_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_company_id_;
  ::google::protobuf::uint32 to_user_id_;
  ::std::string* msg_id_;
  ::std::string* attach_data_;
  int session_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgRecvAck* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgOptNotify : public ::google::protobuf::MessageLite {
 public:
  IMMsgOptNotify();
  virtual ~IMMsgOptNotify();

  IMMsgOptNotify(const IMMsgOptNotify& from);

  inline IMMsgOptNotify& operator=(const IMMsgOptNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgOptNotify& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgOptNotify* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgOptNotify* other);

  // implements Message ----------------------------------------------

  IMMsgOptNotify* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgOptNotify& from);
  void MergeFrom(const IMMsgOptNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 from_company_id = 1;
  inline bool has_from_company_id() const;
  inline void clear_from_company_id();
  static const int kFromCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 from_company_id() const;
  inline void set_from_company_id(::google::protobuf::uint32 value);

  // required uint32 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // required uint32 to_company_id = 3;
  inline bool has_to_company_id() const;
  inline void clear_to_company_id();
  static const int kToCompanyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 to_company_id() const;
  inline void set_to_company_id(::google::protobuf::uint32 value);

  // required uint32 to_user_id = 4;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 4;
  inline ::google::protobuf::uint32 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 5;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 5;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required string msg_id = 6;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 6;
  inline const ::std::string& msg_id() const;
  inline void set_msg_id(const ::std::string& value);
  inline void set_msg_id(const char* value);
  inline void set_msg_id(const char* value, size_t size);
  inline ::std::string* mutable_msg_id();
  inline ::std::string* release_msg_id();
  inline void set_allocated_msg_id(::std::string* msg_id);

  // required .IM.BaseDefine.MsgProperty msg_property = 7;
  inline bool has_msg_property() const;
  inline void clear_msg_property();
  static const int kMsgPropertyFieldNumber = 7;
  inline ::IM::BaseDefine::MsgProperty msg_property() const;
  inline void set_msg_property(::IM::BaseDefine::MsgProperty value);

  // optional bytes attach_data = 8;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 8;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgOptNotify)
 private:
  inline void set_has_from_company_id();
  inline void clear_has_from_company_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_company_id();
  inline void clear_has_to_company_id();
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_msg_property();
  inline void clear_has_msg_property();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 from_company_id_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_company_id_;
  ::google::protobuf::uint32 to_user_id_;
  ::std::string* msg_id_;
  int session_type_;
  int msg_property_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgOptNotify* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgReceiptListReq : public ::google::protobuf::MessageLite {
 public:
  IMMsgReceiptListReq();
  virtual ~IMMsgReceiptListReq();

  IMMsgReceiptListReq(const IMMsgReceiptListReq& from);

  inline IMMsgReceiptListReq& operator=(const IMMsgReceiptListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgReceiptListReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgReceiptListReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgReceiptListReq* other);

  // implements Message ----------------------------------------------

  IMMsgReceiptListReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgReceiptListReq& from);
  void MergeFrom(const IMMsgReceiptListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 company_id = 1;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // required uint32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 group_company_id = 3;
  inline bool has_group_company_id() const;
  inline void clear_group_company_id();
  static const int kGroupCompanyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 group_company_id() const;
  inline void set_group_company_id(::google::protobuf::uint32 value);

  // required uint32 group_id = 4;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 4;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // required string msg_id = 5;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 5;
  inline const ::std::string& msg_id() const;
  inline void set_msg_id(const ::std::string& value);
  inline void set_msg_id(const char* value);
  inline void set_msg_id(const char* value, size_t size);
  inline ::std::string* mutable_msg_id();
  inline ::std::string* release_msg_id();
  inline void set_allocated_msg_id(::std::string* msg_id);

  // required uint64 update_time = 7;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 update_time() const;
  inline void set_update_time(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgReceiptListReq)
 private:
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_company_id();
  inline void clear_has_group_company_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_update_time();
  inline void clear_has_update_time();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 group_company_id_;
  ::google::protobuf::uint32 group_id_;
  ::std::string* msg_id_;
  ::google::protobuf::uint64 update_time_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgReceiptListReq* default_instance_;
};
// -------------------------------------------------------------------

class IMMsgReceiptListRsp : public ::google::protobuf::MessageLite {
 public:
  IMMsgReceiptListRsp();
  virtual ~IMMsgReceiptListRsp();

  IMMsgReceiptListRsp(const IMMsgReceiptListRsp& from);

  inline IMMsgReceiptListRsp& operator=(const IMMsgReceiptListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMMsgReceiptListRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMMsgReceiptListRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMMsgReceiptListRsp* other);

  // implements Message ----------------------------------------------

  IMMsgReceiptListRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMMsgReceiptListRsp& from);
  void MergeFrom(const IMMsgReceiptListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline const ::std::string& msg_id() const;
  inline void set_msg_id(const ::std::string& value);
  inline void set_msg_id(const char* value);
  inline void set_msg_id(const char* value, size_t size);
  inline ::std::string* mutable_msg_id();
  inline ::std::string* release_msg_id();
  inline void set_allocated_msg_id(::std::string* msg_id);

  // required uint32 group_company_id = 2;
  inline bool has_group_company_id() const;
  inline void clear_group_company_id();
  static const int kGroupCompanyIdFieldNumber = 2;
  inline ::google::protobuf::uint32 group_company_id() const;
  inline void set_group_company_id(::google::protobuf::uint32 value);

  // required uint32 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // repeated .IM.BaseDefine.UserIdItem receipt_user_list = 4;
  inline int receipt_user_list_size() const;
  inline void clear_receipt_user_list();
  static const int kReceiptUserListFieldNumber = 4;
  inline const ::IM::BaseDefine::UserIdItem& receipt_user_list(int index) const;
  inline ::IM::BaseDefine::UserIdItem* mutable_receipt_user_list(int index);
  inline ::IM::BaseDefine::UserIdItem* add_receipt_user_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >&
      receipt_user_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >*
      mutable_receipt_user_list();

  // required uint32 is_more_data = 5;
  inline bool has_is_more_data() const;
  inline void clear_is_more_data();
  static const int kIsMoreDataFieldNumber = 5;
  inline ::google::protobuf::uint32 is_more_data() const;
  inline void set_is_more_data(::google::protobuf::uint32 value);

  // required uint64 update_time = 6;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 6;
  inline ::google::protobuf::uint64 update_time() const;
  inline void set_update_time(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgReceiptListRsp)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_group_company_id();
  inline void clear_has_group_company_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_is_more_data();
  inline void clear_has_is_more_data();
  inline void set_has_update_time();
  inline void clear_has_update_time();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* msg_id_;
  ::google::protobuf::uint32 group_company_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem > receipt_user_list_;
  ::google::protobuf::uint64 update_time_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 is_more_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMMsgReceiptListRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMOfflineMsgCntReq : public ::google::protobuf::MessageLite {
 public:
  IMOfflineMsgCntReq();
  virtual ~IMOfflineMsgCntReq();

  IMOfflineMsgCntReq(const IMOfflineMsgCntReq& from);

  inline IMOfflineMsgCntReq& operator=(const IMOfflineMsgCntReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMOfflineMsgCntReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMOfflineMsgCntReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMOfflineMsgCntReq* other);

  // implements Message ----------------------------------------------

  IMOfflineMsgCntReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMOfflineMsgCntReq& from);
  void MergeFrom(const IMOfflineMsgCntReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 from_company_id = 1;
  inline bool has_from_company_id() const;
  inline void clear_from_company_id();
  static const int kFromCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 from_company_id() const;
  inline void set_from_company_id(::google::protobuf::uint32 value);

  // required uint32 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMOfflineMsgCntReq)
 private:
  inline void set_has_from_company_id();
  inline void clear_has_from_company_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 from_company_id_;
  ::google::protobuf::uint32 from_user_id_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMOfflineMsgCntReq* default_instance_;
};
// -------------------------------------------------------------------

class IMOfflineMsgCntRsp : public ::google::protobuf::MessageLite {
 public:
  IMOfflineMsgCntRsp();
  virtual ~IMOfflineMsgCntRsp();

  IMOfflineMsgCntRsp(const IMOfflineMsgCntRsp& from);

  inline IMOfflineMsgCntRsp& operator=(const IMOfflineMsgCntRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMOfflineMsgCntRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMOfflineMsgCntRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMOfflineMsgCntRsp* other);

  // implements Message ----------------------------------------------

  IMOfflineMsgCntRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMOfflineMsgCntRsp& from);
  void MergeFrom(const IMOfflineMsgCntRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .IM.BaseDefine.OfflineMsgCntInfo offline_msg_list = 1;
  inline int offline_msg_list_size() const;
  inline void clear_offline_msg_list();
  static const int kOfflineMsgListFieldNumber = 1;
  inline const ::IM::BaseDefine::OfflineMsgCntInfo& offline_msg_list(int index) const;
  inline ::IM::BaseDefine::OfflineMsgCntInfo* mutable_offline_msg_list(int index);
  inline ::IM::BaseDefine::OfflineMsgCntInfo* add_offline_msg_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::OfflineMsgCntInfo >&
      offline_msg_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::OfflineMsgCntInfo >*
      mutable_offline_msg_list();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMOfflineMsgCntRsp)
 private:
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::OfflineMsgCntInfo > offline_msg_list_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMOfflineMsgCntRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMGetMsgDataListReq : public ::google::protobuf::MessageLite {
 public:
  IMGetMsgDataListReq();
  virtual ~IMGetMsgDataListReq();

  IMGetMsgDataListReq(const IMGetMsgDataListReq& from);

  inline IMGetMsgDataListReq& operator=(const IMGetMsgDataListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetMsgDataListReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetMsgDataListReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetMsgDataListReq* other);

  // implements Message ----------------------------------------------

  IMGetMsgDataListReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetMsgDataListReq& from);
  void MergeFrom(const IMGetMsgDataListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 from_company_id = 1;
  inline bool has_from_company_id() const;
  inline void clear_from_company_id();
  static const int kFromCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 from_company_id() const;
  inline void set_from_company_id(::google::protobuf::uint32 value);

  // required uint32 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // required uint32 to_company_id = 4;
  inline bool has_to_company_id() const;
  inline void clear_to_company_id();
  static const int kToCompanyIdFieldNumber = 4;
  inline ::google::protobuf::uint32 to_company_id() const;
  inline void set_to_company_id(::google::protobuf::uint32 value);

  // required uint32 to_user_id = 5;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 5;
  inline ::google::protobuf::uint32 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 6;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 6;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint64 latest_msg_time = 7;
  inline bool has_latest_msg_time() const;
  inline void clear_latest_msg_time();
  static const int kLatestMsgTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 latest_msg_time() const;
  inline void set_latest_msg_time(::google::protobuf::uint64 value);

  // optional uint64 end_msg_time = 8;
  inline bool has_end_msg_time() const;
  inline void clear_end_msg_time();
  static const int kEndMsgTimeFieldNumber = 8;
  inline ::google::protobuf::uint64 end_msg_time() const;
  inline void set_end_msg_time(::google::protobuf::uint64 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgDataListReq)
 private:
  inline void set_has_from_company_id();
  inline void clear_has_from_company_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_company_id();
  inline void clear_has_to_company_id();
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_latest_msg_time();
  inline void clear_has_latest_msg_time();
  inline void set_has_end_msg_time();
  inline void clear_has_end_msg_time();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 from_company_id_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_company_id_;
  ::google::protobuf::uint32 to_user_id_;
  ::google::protobuf::uint64 latest_msg_time_;
  ::google::protobuf::uint64 end_msg_time_;
  ::std::string* attach_data_;
  int session_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetMsgDataListReq* default_instance_;
};
// -------------------------------------------------------------------

class IMGetMsgDataListRsp : public ::google::protobuf::MessageLite {
 public:
  IMGetMsgDataListRsp();
  virtual ~IMGetMsgDataListRsp();

  IMGetMsgDataListRsp(const IMGetMsgDataListRsp& from);

  inline IMGetMsgDataListRsp& operator=(const IMGetMsgDataListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetMsgDataListRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetMsgDataListRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetMsgDataListRsp* other);

  // implements Message ----------------------------------------------

  IMGetMsgDataListRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetMsgDataListRsp& from);
  void MergeFrom(const IMGetMsgDataListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 is_more_data = 1;
  inline bool has_is_more_data() const;
  inline void clear_is_more_data();
  static const int kIsMoreDataFieldNumber = 1;
  inline ::google::protobuf::uint32 is_more_data() const;
  inline void set_is_more_data(::google::protobuf::uint32 value);

  // repeated .IM.BaseDefine.MsgData msg_data_list = 2;
  inline int msg_data_list_size() const;
  inline void clear_msg_data_list();
  static const int kMsgDataListFieldNumber = 2;
  inline const ::IM::BaseDefine::MsgData& msg_data_list(int index) const;
  inline ::IM::BaseDefine::MsgData* mutable_msg_data_list(int index);
  inline ::IM::BaseDefine::MsgData* add_msg_data_list();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData >&
      msg_data_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData >*
      mutable_msg_data_list();

  // optional uint32 company_id = 3;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 company_id() const;
  inline void set_company_id(::google::protobuf::uint32 value);

  // optional uint32 user_id = 4;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional .IM.BaseDefine.SessionType session_type = 5;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 5;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgDataListRsp)
 private:
  inline void set_has_is_more_data();
  inline void clear_has_is_more_data();
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData > msg_data_list_;
  ::google::protobuf::uint32 is_more_data_;
  ::google::protobuf::uint32 company_id_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetMsgDataListRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMGetLatestMsgIdReq : public ::google::protobuf::MessageLite {
 public:
  IMGetLatestMsgIdReq();
  virtual ~IMGetLatestMsgIdReq();

  IMGetLatestMsgIdReq(const IMGetLatestMsgIdReq& from);

  inline IMGetLatestMsgIdReq& operator=(const IMGetLatestMsgIdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetLatestMsgIdReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetLatestMsgIdReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetLatestMsgIdReq* other);

  // implements Message ----------------------------------------------

  IMGetLatestMsgIdReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetLatestMsgIdReq& from);
  void MergeFrom(const IMGetLatestMsgIdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 from_company_id = 1;
  inline bool has_from_company_id() const;
  inline void clear_from_company_id();
  static const int kFromCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 from_company_id() const;
  inline void set_from_company_id(::google::protobuf::uint32 value);

  // required uint32 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 3;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 3;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint32 to_company_id = 4;
  inline bool has_to_company_id() const;
  inline void clear_to_company_id();
  static const int kToCompanyIdFieldNumber = 4;
  inline ::google::protobuf::uint32 to_company_id() const;
  inline void set_to_company_id(::google::protobuf::uint32 value);

  // required uint32 to_user_id = 5;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 5;
  inline ::google::protobuf::uint32 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint32 value);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetLatestMsgIdReq)
 private:
  inline void set_has_from_company_id();
  inline void clear_has_from_company_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_to_company_id();
  inline void clear_has_to_company_id();
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 from_company_id_;
  ::google::protobuf::uint32 from_user_id_;
  int session_type_;
  ::google::protobuf::uint32 to_company_id_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 to_user_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetLatestMsgIdReq* default_instance_;
};
// -------------------------------------------------------------------

class IMGetLatestMsgIdRsp : public ::google::protobuf::MessageLite {
 public:
  IMGetLatestMsgIdRsp();
  virtual ~IMGetLatestMsgIdRsp();

  IMGetLatestMsgIdRsp(const IMGetLatestMsgIdRsp& from);

  inline IMGetLatestMsgIdRsp& operator=(const IMGetLatestMsgIdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetLatestMsgIdRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetLatestMsgIdRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetLatestMsgIdRsp* other);

  // implements Message ----------------------------------------------

  IMGetLatestMsgIdRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetLatestMsgIdRsp& from);
  void MergeFrom(const IMGetLatestMsgIdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 from_company_id = 1;
  inline bool has_from_company_id() const;
  inline void clear_from_company_id();
  static const int kFromCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 from_company_id() const;
  inline void set_from_company_id(::google::protobuf::uint32 value);

  // required uint32 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 3;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 3;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // required uint32 to_company_id = 4;
  inline bool has_to_company_id() const;
  inline void clear_to_company_id();
  static const int kToCompanyIdFieldNumber = 4;
  inline ::google::protobuf::uint32 to_company_id() const;
  inline void set_to_company_id(::google::protobuf::uint32 value);

  // required uint32 to_user_id = 5;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 5;
  inline ::google::protobuf::uint32 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint32 value);

  // required string latest_msg_id = 6;
  inline bool has_latest_msg_id() const;
  inline void clear_latest_msg_id();
  static const int kLatestMsgIdFieldNumber = 6;
  inline const ::std::string& latest_msg_id() const;
  inline void set_latest_msg_id(const ::std::string& value);
  inline void set_latest_msg_id(const char* value);
  inline void set_latest_msg_id(const char* value, size_t size);
  inline ::std::string* mutable_latest_msg_id();
  inline ::std::string* release_latest_msg_id();
  inline void set_allocated_latest_msg_id(::std::string* latest_msg_id);

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetLatestMsgIdRsp)
 private:
  inline void set_has_from_company_id();
  inline void clear_has_from_company_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_to_company_id();
  inline void clear_has_to_company_id();
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_latest_msg_id();
  inline void clear_has_latest_msg_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 from_company_id_;
  ::google::protobuf::uint32 from_user_id_;
  int session_type_;
  ::google::protobuf::uint32 to_company_id_;
  ::std::string* latest_msg_id_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 to_user_id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetLatestMsgIdRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMGetMsgByIdReq : public ::google::protobuf::MessageLite {
 public:
  IMGetMsgByIdReq();
  virtual ~IMGetMsgByIdReq();

  IMGetMsgByIdReq(const IMGetMsgByIdReq& from);

  inline IMGetMsgByIdReq& operator=(const IMGetMsgByIdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetMsgByIdReq& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetMsgByIdReq* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetMsgByIdReq* other);

  // implements Message ----------------------------------------------

  IMGetMsgByIdReq* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetMsgByIdReq& from);
  void MergeFrom(const IMGetMsgByIdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 from_company_id = 1;
  inline bool has_from_company_id() const;
  inline void clear_from_company_id();
  static const int kFromCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 from_company_id() const;
  inline void set_from_company_id(::google::protobuf::uint32 value);

  // required uint32 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // required uint32 to_company_id = 4;
  inline bool has_to_company_id() const;
  inline void clear_to_company_id();
  static const int kToCompanyIdFieldNumber = 4;
  inline ::google::protobuf::uint32 to_company_id() const;
  inline void set_to_company_id(::google::protobuf::uint32 value);

  // required uint32 to_user_id = 5;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 5;
  inline ::google::protobuf::uint32 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.SessionType session_type = 6;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 6;
  inline ::IM::BaseDefine::SessionType session_type() const;
  inline void set_session_type(::IM::BaseDefine::SessionType value);

  // repeated string msg_id_list = 7;
  inline int msg_id_list_size() const;
  inline void clear_msg_id_list();
  static const int kMsgIdListFieldNumber = 7;
  inline const ::std::string& msg_id_list(int index) const;
  inline ::std::string* mutable_msg_id_list(int index);
  inline void set_msg_id_list(int index, const ::std::string& value);
  inline void set_msg_id_list(int index, const char* value);
  inline void set_msg_id_list(int index, const char* value, size_t size);
  inline ::std::string* add_msg_id_list();
  inline void add_msg_id_list(const ::std::string& value);
  inline void add_msg_id_list(const char* value);
  inline void add_msg_id_list(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& msg_id_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_msg_id_list();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgByIdReq)
 private:
  inline void set_has_from_company_id();
  inline void clear_has_from_company_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_company_id();
  inline void clear_has_to_company_id();
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 from_company_id_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_company_id_;
  ::google::protobuf::uint32 to_user_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> msg_id_list_;
  ::std::string* attach_data_;
  int session_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetMsgByIdReq* default_instance_;
};
// -------------------------------------------------------------------

class IMGetMsgByIdRsp : public ::google::protobuf::MessageLite {
 public:
  IMGetMsgByIdRsp();
  virtual ~IMGetMsgByIdRsp();

  IMGetMsgByIdRsp(const IMGetMsgByIdRsp& from);

  inline IMGetMsgByIdRsp& operator=(const IMGetMsgByIdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMGetMsgByIdRsp& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMGetMsgByIdRsp* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMGetMsgByIdRsp* other);

  // implements Message ----------------------------------------------

  IMGetMsgByIdRsp* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMGetMsgByIdRsp& from);
  void MergeFrom(const IMGetMsgByIdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .IM.BaseDefine.MsgData msg_data = 1;
  inline int msg_data_size() const;
  inline void clear_msg_data();
  static const int kMsgDataFieldNumber = 1;
  inline const ::IM::BaseDefine::MsgData& msg_data(int index) const;
  inline ::IM::BaseDefine::MsgData* mutable_msg_data(int index);
  inline ::IM::BaseDefine::MsgData* add_msg_data();
  inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData >&
      msg_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData >*
      mutable_msg_data();

  // optional bytes attach_data = 20;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgByIdRsp)
 private:
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData > msg_data_;
  ::std::string* attach_data_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMGetMsgByIdRsp* default_instance_;
};
// -------------------------------------------------------------------

class IMP2PCmdMsg : public ::google::protobuf::MessageLite {
 public:
  IMP2PCmdMsg();
  virtual ~IMP2PCmdMsg();

  IMP2PCmdMsg(const IMP2PCmdMsg& from);

  inline IMP2PCmdMsg& operator=(const IMP2PCmdMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const IMP2PCmdMsg& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const IMP2PCmdMsg* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(IMP2PCmdMsg* other);

  // implements Message ----------------------------------------------

  IMP2PCmdMsg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const IMP2PCmdMsg& from);
  void MergeFrom(const IMP2PCmdMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 from_company_id = 1;
  inline bool has_from_company_id() const;
  inline void clear_from_company_id();
  static const int kFromCompanyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 from_company_id() const;
  inline void set_from_company_id(::google::protobuf::uint32 value);

  // required uint32 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // required uint32 to_company_id = 3;
  inline bool has_to_company_id() const;
  inline void clear_to_company_id();
  static const int kToCompanyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 to_company_id() const;
  inline void set_to_company_id(::google::protobuf::uint32 value);

  // required uint32 to_user_id = 4;
  inline bool has_to_user_id() const;
  inline void clear_to_user_id();
  static const int kToUserIdFieldNumber = 4;
  inline ::google::protobuf::uint32 to_user_id() const;
  inline void set_to_user_id(::google::protobuf::uint32 value);

  // required .IM.BaseDefine.P2PMsgCmdType p2p_msg_type = 5;
  inline bool has_p2p_msg_type() const;
  inline void clear_p2p_msg_type();
  static const int kP2PMsgTypeFieldNumber = 5;
  inline ::IM::BaseDefine::P2PMsgCmdType p2p_msg_type() const;
  inline void set_p2p_msg_type(::IM::BaseDefine::P2PMsgCmdType value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMP2PCmdMsg)
 private:
  inline void set_has_from_company_id();
  inline void clear_has_from_company_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_company_id();
  inline void clear_has_to_company_id();
  inline void set_has_to_user_id();
  inline void clear_has_to_user_id();
  inline void set_has_p2p_msg_type();
  inline void clear_has_p2p_msg_type();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 from_company_id_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_company_id_;
  ::google::protobuf::uint32 to_user_id_;
  int p2p_msg_type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_IM_2eMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_IM_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_IM_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static IMP2PCmdMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// IMMsg

// required .IM.BaseDefine.MsgData msg_data = 1;
inline bool IMMsg::has_msg_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsg::set_has_msg_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsg::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsg::clear_msg_data() {
  if (msg_data_ != NULL) msg_data_->::IM::BaseDefine::MsgData::Clear();
  clear_has_msg_data();
}
inline const ::IM::BaseDefine::MsgData& IMMsg::msg_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsg.msg_data)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msg_data_ != NULL ? *msg_data_ : *default_instance().msg_data_;
#else
  return msg_data_ != NULL ? *msg_data_ : *default_instance_->msg_data_;
#endif
}
inline ::IM::BaseDefine::MsgData* IMMsg::mutable_msg_data() {
  set_has_msg_data();
  if (msg_data_ == NULL) msg_data_ = new ::IM::BaseDefine::MsgData;
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsg.msg_data)
  return msg_data_;
}
inline ::IM::BaseDefine::MsgData* IMMsg::release_msg_data() {
  clear_has_msg_data();
  ::IM::BaseDefine::MsgData* temp = msg_data_;
  msg_data_ = NULL;
  return temp;
}
inline void IMMsg::set_allocated_msg_data(::IM::BaseDefine::MsgData* msg_data) {
  delete msg_data_;
  msg_data_ = msg_data;
  if (msg_data) {
    set_has_msg_data();
  } else {
    clear_has_msg_data();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsg.msg_data)
}

// optional bytes attach_data = 11;
inline bool IMMsg::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsg::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsg::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsg::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMMsg::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsg.attach_data)
  return *attach_data_;
}
inline void IMMsg::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsg.attach_data)
}
inline void IMMsg::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsg.attach_data)
}
inline void IMMsg::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsg.attach_data)
}
inline ::std::string* IMMsg::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsg.attach_data)
  return attach_data_;
}
inline ::std::string* IMMsg::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsg::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsg.attach_data)
}

// -------------------------------------------------------------------

// GTCMsg

// required .IM.Message.IMMsg msg = 1;
inline bool GTCMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GTCMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GTCMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GTCMsg::clear_msg() {
  if (msg_ != NULL) msg_->::IM::Message::IMMsg::Clear();
  clear_has_msg();
}
inline const ::IM::Message::IMMsg& GTCMsg::msg() const {
  // @@protoc_insertion_point(field_get:IM.Message.GTCMsg.msg)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return msg_ != NULL ? *msg_ : *default_instance().msg_;
#else
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
#endif
}
inline ::IM::Message::IMMsg* GTCMsg::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::IM::Message::IMMsg;
  // @@protoc_insertion_point(field_mutable:IM.Message.GTCMsg.msg)
  return msg_;
}
inline ::IM::Message::IMMsg* GTCMsg::release_msg() {
  clear_has_msg();
  ::IM::Message::IMMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void GTCMsg::set_allocated_msg(::IM::Message::IMMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.GTCMsg.msg)
}

// repeated uint32 socket_id = 2;
inline int GTCMsg::socket_id_size() const {
  return socket_id_.size();
}
inline void GTCMsg::clear_socket_id() {
  socket_id_.Clear();
}
inline ::google::protobuf::uint32 GTCMsg::socket_id(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.GTCMsg.socket_id)
  return socket_id_.Get(index);
}
inline void GTCMsg::set_socket_id(int index, ::google::protobuf::uint32 value) {
  socket_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Message.GTCMsg.socket_id)
}
inline void GTCMsg::add_socket_id(::google::protobuf::uint32 value) {
  socket_id_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Message.GTCMsg.socket_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GTCMsg::socket_id() const {
  // @@protoc_insertion_point(field_list:IM.Message.GTCMsg.socket_id)
  return socket_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GTCMsg::mutable_socket_id() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.GTCMsg.socket_id)
  return &socket_id_;
}

// -------------------------------------------------------------------

// IMMsgRecvAck

// required uint32 from_company_id = 1;
inline bool IMMsgRecvAck::has_from_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgRecvAck::set_has_from_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgRecvAck::clear_has_from_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgRecvAck::clear_from_company_id() {
  from_company_id_ = 0u;
  clear_has_from_company_id();
}
inline ::google::protobuf::uint32 IMMsgRecvAck::from_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgRecvAck.from_company_id)
  return from_company_id_;
}
inline void IMMsgRecvAck::set_from_company_id(::google::protobuf::uint32 value) {
  set_has_from_company_id();
  from_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgRecvAck.from_company_id)
}

// required uint32 from_user_id = 2;
inline bool IMMsgRecvAck::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgRecvAck::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgRecvAck::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgRecvAck::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 IMMsgRecvAck::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgRecvAck.from_user_id)
  return from_user_id_;
}
inline void IMMsgRecvAck::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgRecvAck.from_user_id)
}

// required uint32 to_company_id = 3;
inline bool IMMsgRecvAck::has_to_company_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgRecvAck::set_has_to_company_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgRecvAck::clear_has_to_company_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgRecvAck::clear_to_company_id() {
  to_company_id_ = 0u;
  clear_has_to_company_id();
}
inline ::google::protobuf::uint32 IMMsgRecvAck::to_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgRecvAck.to_company_id)
  return to_company_id_;
}
inline void IMMsgRecvAck::set_to_company_id(::google::protobuf::uint32 value) {
  set_has_to_company_id();
  to_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgRecvAck.to_company_id)
}

// required uint32 to_user_id = 4;
inline bool IMMsgRecvAck::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgRecvAck::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgRecvAck::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgRecvAck::clear_to_user_id() {
  to_user_id_ = 0u;
  clear_has_to_user_id();
}
inline ::google::protobuf::uint32 IMMsgRecvAck::to_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgRecvAck.to_user_id)
  return to_user_id_;
}
inline void IMMsgRecvAck::set_to_user_id(::google::protobuf::uint32 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgRecvAck.to_user_id)
}

// required .IM.BaseDefine.SessionType session_type = 5;
inline bool IMMsgRecvAck::has_session_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgRecvAck::set_has_session_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgRecvAck::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgRecvAck::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMMsgRecvAck::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgRecvAck.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgRecvAck::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgRecvAck.session_type)
}

// required string msg_id = 6;
inline bool IMMsgRecvAck::has_msg_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMMsgRecvAck::set_has_msg_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMMsgRecvAck::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMMsgRecvAck::clear_msg_id() {
  if (msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_->clear();
  }
  clear_has_msg_id();
}
inline const ::std::string& IMMsgRecvAck::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgRecvAck.msg_id)
  return *msg_id_;
}
inline void IMMsgRecvAck::set_msg_id(const ::std::string& value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgRecvAck.msg_id)
}
inline void IMMsgRecvAck::set_msg_id(const char* value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgRecvAck.msg_id)
}
inline void IMMsgRecvAck::set_msg_id(const char* value, size_t size) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgRecvAck.msg_id)
}
inline ::std::string* IMMsgRecvAck::mutable_msg_id() {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgRecvAck.msg_id)
  return msg_id_;
}
inline ::std::string* IMMsgRecvAck::release_msg_id() {
  clear_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_id_;
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgRecvAck::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_id_;
  }
  if (msg_id) {
    set_has_msg_id();
    msg_id_ = msg_id;
  } else {
    clear_has_msg_id();
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgRecvAck.msg_id)
}

// optional bytes attach_data = 7;
inline bool IMMsgRecvAck::has_attach_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMMsgRecvAck::set_has_attach_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMMsgRecvAck::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMMsgRecvAck::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMMsgRecvAck::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgRecvAck.attach_data)
  return *attach_data_;
}
inline void IMMsgRecvAck::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgRecvAck.attach_data)
}
inline void IMMsgRecvAck::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgRecvAck.attach_data)
}
inline void IMMsgRecvAck::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgRecvAck.attach_data)
}
inline ::std::string* IMMsgRecvAck::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgRecvAck.attach_data)
  return attach_data_;
}
inline ::std::string* IMMsgRecvAck::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgRecvAck::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgRecvAck.attach_data)
}

// -------------------------------------------------------------------

// IMMsgOptNotify

// required uint32 from_company_id = 1;
inline bool IMMsgOptNotify::has_from_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgOptNotify::set_has_from_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgOptNotify::clear_has_from_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgOptNotify::clear_from_company_id() {
  from_company_id_ = 0u;
  clear_has_from_company_id();
}
inline ::google::protobuf::uint32 IMMsgOptNotify::from_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgOptNotify.from_company_id)
  return from_company_id_;
}
inline void IMMsgOptNotify::set_from_company_id(::google::protobuf::uint32 value) {
  set_has_from_company_id();
  from_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgOptNotify.from_company_id)
}

// required uint32 from_user_id = 2;
inline bool IMMsgOptNotify::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgOptNotify::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgOptNotify::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgOptNotify::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 IMMsgOptNotify::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgOptNotify.from_user_id)
  return from_user_id_;
}
inline void IMMsgOptNotify::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgOptNotify.from_user_id)
}

// required uint32 to_company_id = 3;
inline bool IMMsgOptNotify::has_to_company_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgOptNotify::set_has_to_company_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgOptNotify::clear_has_to_company_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgOptNotify::clear_to_company_id() {
  to_company_id_ = 0u;
  clear_has_to_company_id();
}
inline ::google::protobuf::uint32 IMMsgOptNotify::to_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgOptNotify.to_company_id)
  return to_company_id_;
}
inline void IMMsgOptNotify::set_to_company_id(::google::protobuf::uint32 value) {
  set_has_to_company_id();
  to_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgOptNotify.to_company_id)
}

// required uint32 to_user_id = 4;
inline bool IMMsgOptNotify::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgOptNotify::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgOptNotify::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgOptNotify::clear_to_user_id() {
  to_user_id_ = 0u;
  clear_has_to_user_id();
}
inline ::google::protobuf::uint32 IMMsgOptNotify::to_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgOptNotify.to_user_id)
  return to_user_id_;
}
inline void IMMsgOptNotify::set_to_user_id(::google::protobuf::uint32 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgOptNotify.to_user_id)
}

// required .IM.BaseDefine.SessionType session_type = 5;
inline bool IMMsgOptNotify::has_session_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgOptNotify::set_has_session_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgOptNotify::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgOptNotify::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMMsgOptNotify::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgOptNotify.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgOptNotify::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgOptNotify.session_type)
}

// required string msg_id = 6;
inline bool IMMsgOptNotify::has_msg_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMMsgOptNotify::set_has_msg_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMMsgOptNotify::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMMsgOptNotify::clear_msg_id() {
  if (msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_->clear();
  }
  clear_has_msg_id();
}
inline const ::std::string& IMMsgOptNotify::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgOptNotify.msg_id)
  return *msg_id_;
}
inline void IMMsgOptNotify::set_msg_id(const ::std::string& value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgOptNotify.msg_id)
}
inline void IMMsgOptNotify::set_msg_id(const char* value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgOptNotify.msg_id)
}
inline void IMMsgOptNotify::set_msg_id(const char* value, size_t size) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgOptNotify.msg_id)
}
inline ::std::string* IMMsgOptNotify::mutable_msg_id() {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgOptNotify.msg_id)
  return msg_id_;
}
inline ::std::string* IMMsgOptNotify::release_msg_id() {
  clear_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_id_;
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgOptNotify::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_id_;
  }
  if (msg_id) {
    set_has_msg_id();
    msg_id_ = msg_id;
  } else {
    clear_has_msg_id();
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgOptNotify.msg_id)
}

// required .IM.BaseDefine.MsgProperty msg_property = 7;
inline bool IMMsgOptNotify::has_msg_property() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMMsgOptNotify::set_has_msg_property() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMMsgOptNotify::clear_has_msg_property() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMMsgOptNotify::clear_msg_property() {
  msg_property_ = 1;
  clear_has_msg_property();
}
inline ::IM::BaseDefine::MsgProperty IMMsgOptNotify::msg_property() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgOptNotify.msg_property)
  return static_cast< ::IM::BaseDefine::MsgProperty >(msg_property_);
}
inline void IMMsgOptNotify::set_msg_property(::IM::BaseDefine::MsgProperty value) {
  assert(::IM::BaseDefine::MsgProperty_IsValid(value));
  set_has_msg_property();
  msg_property_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgOptNotify.msg_property)
}

// optional bytes attach_data = 8;
inline bool IMMsgOptNotify::has_attach_data() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IMMsgOptNotify::set_has_attach_data() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IMMsgOptNotify::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IMMsgOptNotify::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMMsgOptNotify::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgOptNotify.attach_data)
  return *attach_data_;
}
inline void IMMsgOptNotify::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgOptNotify.attach_data)
}
inline void IMMsgOptNotify::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgOptNotify.attach_data)
}
inline void IMMsgOptNotify::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgOptNotify.attach_data)
}
inline ::std::string* IMMsgOptNotify::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgOptNotify.attach_data)
  return attach_data_;
}
inline ::std::string* IMMsgOptNotify::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgOptNotify::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgOptNotify.attach_data)
}

// -------------------------------------------------------------------

// IMMsgReceiptListReq

// required uint32 company_id = 1;
inline bool IMMsgReceiptListReq::has_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgReceiptListReq::set_has_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgReceiptListReq::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgReceiptListReq::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 IMMsgReceiptListReq::company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListReq.company_id)
  return company_id_;
}
inline void IMMsgReceiptListReq::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListReq.company_id)
}

// required uint32 user_id = 2;
inline bool IMMsgReceiptListReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgReceiptListReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgReceiptListReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgReceiptListReq::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 IMMsgReceiptListReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListReq.user_id)
  return user_id_;
}
inline void IMMsgReceiptListReq::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListReq.user_id)
}

// required uint32 group_company_id = 3;
inline bool IMMsgReceiptListReq::has_group_company_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgReceiptListReq::set_has_group_company_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgReceiptListReq::clear_has_group_company_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgReceiptListReq::clear_group_company_id() {
  group_company_id_ = 0u;
  clear_has_group_company_id();
}
inline ::google::protobuf::uint32 IMMsgReceiptListReq::group_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListReq.group_company_id)
  return group_company_id_;
}
inline void IMMsgReceiptListReq::set_group_company_id(::google::protobuf::uint32 value) {
  set_has_group_company_id();
  group_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListReq.group_company_id)
}

// required uint32 group_id = 4;
inline bool IMMsgReceiptListReq::has_group_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMMsgReceiptListReq::set_has_group_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMMsgReceiptListReq::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMMsgReceiptListReq::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 IMMsgReceiptListReq::group_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListReq.group_id)
  return group_id_;
}
inline void IMMsgReceiptListReq::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListReq.group_id)
}

// required string msg_id = 5;
inline bool IMMsgReceiptListReq::has_msg_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgReceiptListReq::set_has_msg_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgReceiptListReq::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgReceiptListReq::clear_msg_id() {
  if (msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_->clear();
  }
  clear_has_msg_id();
}
inline const ::std::string& IMMsgReceiptListReq::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListReq.msg_id)
  return *msg_id_;
}
inline void IMMsgReceiptListReq::set_msg_id(const ::std::string& value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListReq.msg_id)
}
inline void IMMsgReceiptListReq::set_msg_id(const char* value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgReceiptListReq.msg_id)
}
inline void IMMsgReceiptListReq::set_msg_id(const char* value, size_t size) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgReceiptListReq.msg_id)
}
inline ::std::string* IMMsgReceiptListReq::mutable_msg_id() {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgReceiptListReq.msg_id)
  return msg_id_;
}
inline ::std::string* IMMsgReceiptListReq::release_msg_id() {
  clear_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_id_;
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgReceiptListReq::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_id_;
  }
  if (msg_id) {
    set_has_msg_id();
    msg_id_ = msg_id;
  } else {
    clear_has_msg_id();
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgReceiptListReq.msg_id)
}

// required uint64 update_time = 7;
inline bool IMMsgReceiptListReq::has_update_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMMsgReceiptListReq::set_has_update_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMMsgReceiptListReq::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMMsgReceiptListReq::clear_update_time() {
  update_time_ = GOOGLE_ULONGLONG(0);
  clear_has_update_time();
}
inline ::google::protobuf::uint64 IMMsgReceiptListReq::update_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListReq.update_time)
  return update_time_;
}
inline void IMMsgReceiptListReq::set_update_time(::google::protobuf::uint64 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListReq.update_time)
}

// optional bytes attach_data = 20;
inline bool IMMsgReceiptListReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMMsgReceiptListReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMMsgReceiptListReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMMsgReceiptListReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMMsgReceiptListReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListReq.attach_data)
  return *attach_data_;
}
inline void IMMsgReceiptListReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListReq.attach_data)
}
inline void IMMsgReceiptListReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgReceiptListReq.attach_data)
}
inline void IMMsgReceiptListReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgReceiptListReq.attach_data)
}
inline ::std::string* IMMsgReceiptListReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgReceiptListReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMMsgReceiptListReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgReceiptListReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgReceiptListReq.attach_data)
}

// -------------------------------------------------------------------

// IMMsgReceiptListRsp

// required string msg_id = 1;
inline bool IMMsgReceiptListRsp::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMMsgReceiptListRsp::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMMsgReceiptListRsp::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMMsgReceiptListRsp::clear_msg_id() {
  if (msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_->clear();
  }
  clear_has_msg_id();
}
inline const ::std::string& IMMsgReceiptListRsp::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListRsp.msg_id)
  return *msg_id_;
}
inline void IMMsgReceiptListRsp::set_msg_id(const ::std::string& value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListRsp.msg_id)
}
inline void IMMsgReceiptListRsp::set_msg_id(const char* value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgReceiptListRsp.msg_id)
}
inline void IMMsgReceiptListRsp::set_msg_id(const char* value, size_t size) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgReceiptListRsp.msg_id)
}
inline ::std::string* IMMsgReceiptListRsp::mutable_msg_id() {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgReceiptListRsp.msg_id)
  return msg_id_;
}
inline ::std::string* IMMsgReceiptListRsp::release_msg_id() {
  clear_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_id_;
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgReceiptListRsp::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_id_;
  }
  if (msg_id) {
    set_has_msg_id();
    msg_id_ = msg_id;
  } else {
    clear_has_msg_id();
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgReceiptListRsp.msg_id)
}

// required uint32 group_company_id = 2;
inline bool IMMsgReceiptListRsp::has_group_company_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMMsgReceiptListRsp::set_has_group_company_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMMsgReceiptListRsp::clear_has_group_company_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMMsgReceiptListRsp::clear_group_company_id() {
  group_company_id_ = 0u;
  clear_has_group_company_id();
}
inline ::google::protobuf::uint32 IMMsgReceiptListRsp::group_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListRsp.group_company_id)
  return group_company_id_;
}
inline void IMMsgReceiptListRsp::set_group_company_id(::google::protobuf::uint32 value) {
  set_has_group_company_id();
  group_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListRsp.group_company_id)
}

// required uint32 group_id = 3;
inline bool IMMsgReceiptListRsp::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMMsgReceiptListRsp::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMMsgReceiptListRsp::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMMsgReceiptListRsp::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 IMMsgReceiptListRsp::group_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListRsp.group_id)
  return group_id_;
}
inline void IMMsgReceiptListRsp::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListRsp.group_id)
}

// repeated .IM.BaseDefine.UserIdItem receipt_user_list = 4;
inline int IMMsgReceiptListRsp::receipt_user_list_size() const {
  return receipt_user_list_.size();
}
inline void IMMsgReceiptListRsp::clear_receipt_user_list() {
  receipt_user_list_.Clear();
}
inline const ::IM::BaseDefine::UserIdItem& IMMsgReceiptListRsp::receipt_user_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListRsp.receipt_user_list)
  return receipt_user_list_.Get(index);
}
inline ::IM::BaseDefine::UserIdItem* IMMsgReceiptListRsp::mutable_receipt_user_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgReceiptListRsp.receipt_user_list)
  return receipt_user_list_.Mutable(index);
}
inline ::IM::BaseDefine::UserIdItem* IMMsgReceiptListRsp::add_receipt_user_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMMsgReceiptListRsp.receipt_user_list)
  return receipt_user_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >&
IMMsgReceiptListRsp::receipt_user_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMMsgReceiptListRsp.receipt_user_list)
  return receipt_user_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UserIdItem >*
IMMsgReceiptListRsp::mutable_receipt_user_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMMsgReceiptListRsp.receipt_user_list)
  return &receipt_user_list_;
}

// required uint32 is_more_data = 5;
inline bool IMMsgReceiptListRsp::has_is_more_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMMsgReceiptListRsp::set_has_is_more_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMMsgReceiptListRsp::clear_has_is_more_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMMsgReceiptListRsp::clear_is_more_data() {
  is_more_data_ = 0u;
  clear_has_is_more_data();
}
inline ::google::protobuf::uint32 IMMsgReceiptListRsp::is_more_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListRsp.is_more_data)
  return is_more_data_;
}
inline void IMMsgReceiptListRsp::set_is_more_data(::google::protobuf::uint32 value) {
  set_has_is_more_data();
  is_more_data_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListRsp.is_more_data)
}

// required uint64 update_time = 6;
inline bool IMMsgReceiptListRsp::has_update_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMMsgReceiptListRsp::set_has_update_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMMsgReceiptListRsp::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMMsgReceiptListRsp::clear_update_time() {
  update_time_ = GOOGLE_ULONGLONG(0);
  clear_has_update_time();
}
inline ::google::protobuf::uint64 IMMsgReceiptListRsp::update_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListRsp.update_time)
  return update_time_;
}
inline void IMMsgReceiptListRsp::set_update_time(::google::protobuf::uint64 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListRsp.update_time)
}

// optional bytes attach_data = 20;
inline bool IMMsgReceiptListRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMMsgReceiptListRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMMsgReceiptListRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMMsgReceiptListRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMMsgReceiptListRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgReceiptListRsp.attach_data)
  return *attach_data_;
}
inline void IMMsgReceiptListRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgReceiptListRsp.attach_data)
}
inline void IMMsgReceiptListRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgReceiptListRsp.attach_data)
}
inline void IMMsgReceiptListRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgReceiptListRsp.attach_data)
}
inline ::std::string* IMMsgReceiptListRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgReceiptListRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMMsgReceiptListRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMMsgReceiptListRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgReceiptListRsp.attach_data)
}

// -------------------------------------------------------------------

// IMOfflineMsgCntReq

// required uint32 from_company_id = 1;
inline bool IMOfflineMsgCntReq::has_from_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMOfflineMsgCntReq::set_has_from_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMOfflineMsgCntReq::clear_has_from_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMOfflineMsgCntReq::clear_from_company_id() {
  from_company_id_ = 0u;
  clear_has_from_company_id();
}
inline ::google::protobuf::uint32 IMOfflineMsgCntReq::from_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMOfflineMsgCntReq.from_company_id)
  return from_company_id_;
}
inline void IMOfflineMsgCntReq::set_from_company_id(::google::protobuf::uint32 value) {
  set_has_from_company_id();
  from_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMOfflineMsgCntReq.from_company_id)
}

// required uint32 from_user_id = 2;
inline bool IMOfflineMsgCntReq::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMOfflineMsgCntReq::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMOfflineMsgCntReq::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMOfflineMsgCntReq::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 IMOfflineMsgCntReq::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMOfflineMsgCntReq.from_user_id)
  return from_user_id_;
}
inline void IMOfflineMsgCntReq::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMOfflineMsgCntReq.from_user_id)
}

// optional bytes attach_data = 20;
inline bool IMOfflineMsgCntReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMOfflineMsgCntReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMOfflineMsgCntReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMOfflineMsgCntReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMOfflineMsgCntReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMOfflineMsgCntReq.attach_data)
  return *attach_data_;
}
inline void IMOfflineMsgCntReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMOfflineMsgCntReq.attach_data)
}
inline void IMOfflineMsgCntReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMOfflineMsgCntReq.attach_data)
}
inline void IMOfflineMsgCntReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMOfflineMsgCntReq.attach_data)
}
inline ::std::string* IMOfflineMsgCntReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMOfflineMsgCntReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMOfflineMsgCntReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMOfflineMsgCntReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMOfflineMsgCntReq.attach_data)
}

// -------------------------------------------------------------------

// IMOfflineMsgCntRsp

// repeated .IM.BaseDefine.OfflineMsgCntInfo offline_msg_list = 1;
inline int IMOfflineMsgCntRsp::offline_msg_list_size() const {
  return offline_msg_list_.size();
}
inline void IMOfflineMsgCntRsp::clear_offline_msg_list() {
  offline_msg_list_.Clear();
}
inline const ::IM::BaseDefine::OfflineMsgCntInfo& IMOfflineMsgCntRsp::offline_msg_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMOfflineMsgCntRsp.offline_msg_list)
  return offline_msg_list_.Get(index);
}
inline ::IM::BaseDefine::OfflineMsgCntInfo* IMOfflineMsgCntRsp::mutable_offline_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMOfflineMsgCntRsp.offline_msg_list)
  return offline_msg_list_.Mutable(index);
}
inline ::IM::BaseDefine::OfflineMsgCntInfo* IMOfflineMsgCntRsp::add_offline_msg_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMOfflineMsgCntRsp.offline_msg_list)
  return offline_msg_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::OfflineMsgCntInfo >&
IMOfflineMsgCntRsp::offline_msg_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMOfflineMsgCntRsp.offline_msg_list)
  return offline_msg_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::OfflineMsgCntInfo >*
IMOfflineMsgCntRsp::mutable_offline_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMOfflineMsgCntRsp.offline_msg_list)
  return &offline_msg_list_;
}

// optional bytes attach_data = 20;
inline bool IMOfflineMsgCntRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMOfflineMsgCntRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMOfflineMsgCntRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMOfflineMsgCntRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMOfflineMsgCntRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMOfflineMsgCntRsp.attach_data)
  return *attach_data_;
}
inline void IMOfflineMsgCntRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMOfflineMsgCntRsp.attach_data)
}
inline void IMOfflineMsgCntRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMOfflineMsgCntRsp.attach_data)
}
inline void IMOfflineMsgCntRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMOfflineMsgCntRsp.attach_data)
}
inline ::std::string* IMOfflineMsgCntRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMOfflineMsgCntRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMOfflineMsgCntRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMOfflineMsgCntRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMOfflineMsgCntRsp.attach_data)
}

// -------------------------------------------------------------------

// IMGetMsgDataListReq

// required uint32 from_company_id = 1;
inline bool IMGetMsgDataListReq::has_from_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetMsgDataListReq::set_has_from_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetMsgDataListReq::clear_has_from_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetMsgDataListReq::clear_from_company_id() {
  from_company_id_ = 0u;
  clear_has_from_company_id();
}
inline ::google::protobuf::uint32 IMGetMsgDataListReq::from_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListReq.from_company_id)
  return from_company_id_;
}
inline void IMGetMsgDataListReq::set_from_company_id(::google::protobuf::uint32 value) {
  set_has_from_company_id();
  from_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListReq.from_company_id)
}

// required uint32 from_user_id = 2;
inline bool IMGetMsgDataListReq::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetMsgDataListReq::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetMsgDataListReq::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetMsgDataListReq::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 IMGetMsgDataListReq::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListReq.from_user_id)
  return from_user_id_;
}
inline void IMGetMsgDataListReq::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListReq.from_user_id)
}

// required uint32 to_company_id = 4;
inline bool IMGetMsgDataListReq::has_to_company_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetMsgDataListReq::set_has_to_company_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetMsgDataListReq::clear_has_to_company_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetMsgDataListReq::clear_to_company_id() {
  to_company_id_ = 0u;
  clear_has_to_company_id();
}
inline ::google::protobuf::uint32 IMGetMsgDataListReq::to_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListReq.to_company_id)
  return to_company_id_;
}
inline void IMGetMsgDataListReq::set_to_company_id(::google::protobuf::uint32 value) {
  set_has_to_company_id();
  to_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListReq.to_company_id)
}

// required uint32 to_user_id = 5;
inline bool IMGetMsgDataListReq::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMGetMsgDataListReq::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMGetMsgDataListReq::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMGetMsgDataListReq::clear_to_user_id() {
  to_user_id_ = 0u;
  clear_has_to_user_id();
}
inline ::google::protobuf::uint32 IMGetMsgDataListReq::to_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListReq.to_user_id)
  return to_user_id_;
}
inline void IMGetMsgDataListReq::set_to_user_id(::google::protobuf::uint32 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListReq.to_user_id)
}

// required .IM.BaseDefine.SessionType session_type = 6;
inline bool IMGetMsgDataListReq::has_session_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetMsgDataListReq::set_has_session_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetMsgDataListReq::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetMsgDataListReq::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetMsgDataListReq::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListReq.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgDataListReq::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListReq.session_type)
}

// required uint64 latest_msg_time = 7;
inline bool IMGetMsgDataListReq::has_latest_msg_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetMsgDataListReq::set_has_latest_msg_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetMsgDataListReq::clear_has_latest_msg_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetMsgDataListReq::clear_latest_msg_time() {
  latest_msg_time_ = GOOGLE_ULONGLONG(0);
  clear_has_latest_msg_time();
}
inline ::google::protobuf::uint64 IMGetMsgDataListReq::latest_msg_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListReq.latest_msg_time)
  return latest_msg_time_;
}
inline void IMGetMsgDataListReq::set_latest_msg_time(::google::protobuf::uint64 value) {
  set_has_latest_msg_time();
  latest_msg_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListReq.latest_msg_time)
}

// optional uint64 end_msg_time = 8;
inline bool IMGetMsgDataListReq::has_end_msg_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMGetMsgDataListReq::set_has_end_msg_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMGetMsgDataListReq::clear_has_end_msg_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMGetMsgDataListReq::clear_end_msg_time() {
  end_msg_time_ = GOOGLE_ULONGLONG(0);
  clear_has_end_msg_time();
}
inline ::google::protobuf::uint64 IMGetMsgDataListReq::end_msg_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListReq.end_msg_time)
  return end_msg_time_;
}
inline void IMGetMsgDataListReq::set_end_msg_time(::google::protobuf::uint64 value) {
  set_has_end_msg_time();
  end_msg_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListReq.end_msg_time)
}

// optional bytes attach_data = 20;
inline bool IMGetMsgDataListReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IMGetMsgDataListReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IMGetMsgDataListReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IMGetMsgDataListReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetMsgDataListReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListReq.attach_data)
  return *attach_data_;
}
inline void IMGetMsgDataListReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListReq.attach_data)
}
inline void IMGetMsgDataListReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgDataListReq.attach_data)
}
inline void IMGetMsgDataListReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgDataListReq.attach_data)
}
inline ::std::string* IMGetMsgDataListReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgDataListReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetMsgDataListReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetMsgDataListReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgDataListReq.attach_data)
}

// -------------------------------------------------------------------

// IMGetMsgDataListRsp

// required uint32 is_more_data = 1;
inline bool IMGetMsgDataListRsp::has_is_more_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetMsgDataListRsp::set_has_is_more_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetMsgDataListRsp::clear_has_is_more_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetMsgDataListRsp::clear_is_more_data() {
  is_more_data_ = 0u;
  clear_has_is_more_data();
}
inline ::google::protobuf::uint32 IMGetMsgDataListRsp::is_more_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListRsp.is_more_data)
  return is_more_data_;
}
inline void IMGetMsgDataListRsp::set_is_more_data(::google::protobuf::uint32 value) {
  set_has_is_more_data();
  is_more_data_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListRsp.is_more_data)
}

// repeated .IM.BaseDefine.MsgData msg_data_list = 2;
inline int IMGetMsgDataListRsp::msg_data_list_size() const {
  return msg_data_list_.size();
}
inline void IMGetMsgDataListRsp::clear_msg_data_list() {
  msg_data_list_.Clear();
}
inline const ::IM::BaseDefine::MsgData& IMGetMsgDataListRsp::msg_data_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListRsp.msg_data_list)
  return msg_data_list_.Get(index);
}
inline ::IM::BaseDefine::MsgData* IMGetMsgDataListRsp::mutable_msg_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgDataListRsp.msg_data_list)
  return msg_data_list_.Mutable(index);
}
inline ::IM::BaseDefine::MsgData* IMGetMsgDataListRsp::add_msg_data_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMGetMsgDataListRsp.msg_data_list)
  return msg_data_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData >&
IMGetMsgDataListRsp::msg_data_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMGetMsgDataListRsp.msg_data_list)
  return msg_data_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData >*
IMGetMsgDataListRsp::mutable_msg_data_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMGetMsgDataListRsp.msg_data_list)
  return &msg_data_list_;
}

// optional uint32 company_id = 3;
inline bool IMGetMsgDataListRsp::has_company_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetMsgDataListRsp::set_has_company_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetMsgDataListRsp::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetMsgDataListRsp::clear_company_id() {
  company_id_ = 0u;
  clear_has_company_id();
}
inline ::google::protobuf::uint32 IMGetMsgDataListRsp::company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListRsp.company_id)
  return company_id_;
}
inline void IMGetMsgDataListRsp::set_company_id(::google::protobuf::uint32 value) {
  set_has_company_id();
  company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListRsp.company_id)
}

// optional uint32 user_id = 4;
inline bool IMGetMsgDataListRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMGetMsgDataListRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMGetMsgDataListRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMGetMsgDataListRsp::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 IMGetMsgDataListRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListRsp.user_id)
  return user_id_;
}
inline void IMGetMsgDataListRsp::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListRsp.user_id)
}

// optional .IM.BaseDefine.SessionType session_type = 5;
inline bool IMGetMsgDataListRsp::has_session_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetMsgDataListRsp::set_has_session_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetMsgDataListRsp::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetMsgDataListRsp::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetMsgDataListRsp::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListRsp.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgDataListRsp::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListRsp.session_type)
}

// optional bytes attach_data = 20;
inline bool IMGetMsgDataListRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetMsgDataListRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetMsgDataListRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetMsgDataListRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetMsgDataListRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgDataListRsp.attach_data)
  return *attach_data_;
}
inline void IMGetMsgDataListRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgDataListRsp.attach_data)
}
inline void IMGetMsgDataListRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgDataListRsp.attach_data)
}
inline void IMGetMsgDataListRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgDataListRsp.attach_data)
}
inline ::std::string* IMGetMsgDataListRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgDataListRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetMsgDataListRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetMsgDataListRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgDataListRsp.attach_data)
}

// -------------------------------------------------------------------

// IMGetLatestMsgIdReq

// required uint32 from_company_id = 1;
inline bool IMGetLatestMsgIdReq::has_from_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_from_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetLatestMsgIdReq::clear_has_from_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetLatestMsgIdReq::clear_from_company_id() {
  from_company_id_ = 0u;
  clear_has_from_company_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdReq::from_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.from_company_id)
  return from_company_id_;
}
inline void IMGetLatestMsgIdReq::set_from_company_id(::google::protobuf::uint32 value) {
  set_has_from_company_id();
  from_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.from_company_id)
}

// required uint32 from_user_id = 2;
inline bool IMGetLatestMsgIdReq::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetLatestMsgIdReq::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetLatestMsgIdReq::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdReq::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.from_user_id)
  return from_user_id_;
}
inline void IMGetLatestMsgIdReq::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.from_user_id)
}

// required .IM.BaseDefine.SessionType session_type = 3;
inline bool IMGetLatestMsgIdReq::has_session_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_session_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetLatestMsgIdReq::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetLatestMsgIdReq::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetLatestMsgIdReq::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetLatestMsgIdReq::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.session_type)
}

// required uint32 to_company_id = 4;
inline bool IMGetLatestMsgIdReq::has_to_company_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_to_company_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMGetLatestMsgIdReq::clear_has_to_company_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMGetLatestMsgIdReq::clear_to_company_id() {
  to_company_id_ = 0u;
  clear_has_to_company_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdReq::to_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.to_company_id)
  return to_company_id_;
}
inline void IMGetLatestMsgIdReq::set_to_company_id(::google::protobuf::uint32 value) {
  set_has_to_company_id();
  to_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.to_company_id)
}

// required uint32 to_user_id = 5;
inline bool IMGetLatestMsgIdReq::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetLatestMsgIdReq::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetLatestMsgIdReq::clear_to_user_id() {
  to_user_id_ = 0u;
  clear_has_to_user_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdReq::to_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.to_user_id)
  return to_user_id_;
}
inline void IMGetLatestMsgIdReq::set_to_user_id(::google::protobuf::uint32 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.to_user_id)
}

// optional bytes attach_data = 20;
inline bool IMGetLatestMsgIdReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetLatestMsgIdReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetLatestMsgIdReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetLatestMsgIdReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetLatestMsgIdReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.attach_data)
  return *attach_data_;
}
inline void IMGetLatestMsgIdReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
inline void IMGetLatestMsgIdReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
inline void IMGetLatestMsgIdReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
inline ::std::string* IMGetLatestMsgIdReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetLatestMsgIdReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetLatestMsgIdReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetLatestMsgIdReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetLatestMsgIdReq.attach_data)
}

// -------------------------------------------------------------------

// IMGetLatestMsgIdRsp

// required uint32 from_company_id = 1;
inline bool IMGetLatestMsgIdRsp::has_from_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_from_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetLatestMsgIdRsp::clear_has_from_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetLatestMsgIdRsp::clear_from_company_id() {
  from_company_id_ = 0u;
  clear_has_from_company_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdRsp::from_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.from_company_id)
  return from_company_id_;
}
inline void IMGetLatestMsgIdRsp::set_from_company_id(::google::protobuf::uint32 value) {
  set_has_from_company_id();
  from_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.from_company_id)
}

// required uint32 from_user_id = 2;
inline bool IMGetLatestMsgIdRsp::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetLatestMsgIdRsp::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetLatestMsgIdRsp::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdRsp::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.from_user_id)
  return from_user_id_;
}
inline void IMGetLatestMsgIdRsp::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.from_user_id)
}

// required .IM.BaseDefine.SessionType session_type = 3;
inline bool IMGetLatestMsgIdRsp::has_session_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_session_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetLatestMsgIdRsp::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetLatestMsgIdRsp::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetLatestMsgIdRsp::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetLatestMsgIdRsp::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.session_type)
}

// required uint32 to_company_id = 4;
inline bool IMGetLatestMsgIdRsp::has_to_company_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_to_company_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMGetLatestMsgIdRsp::clear_has_to_company_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMGetLatestMsgIdRsp::clear_to_company_id() {
  to_company_id_ = 0u;
  clear_has_to_company_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdRsp::to_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.to_company_id)
  return to_company_id_;
}
inline void IMGetLatestMsgIdRsp::set_to_company_id(::google::protobuf::uint32 value) {
  set_has_to_company_id();
  to_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.to_company_id)
}

// required uint32 to_user_id = 5;
inline bool IMGetLatestMsgIdRsp::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetLatestMsgIdRsp::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetLatestMsgIdRsp::clear_to_user_id() {
  to_user_id_ = 0u;
  clear_has_to_user_id();
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdRsp::to_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.to_user_id)
  return to_user_id_;
}
inline void IMGetLatestMsgIdRsp::set_to_user_id(::google::protobuf::uint32 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.to_user_id)
}

// required string latest_msg_id = 6;
inline bool IMGetLatestMsgIdRsp::has_latest_msg_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_latest_msg_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IMGetLatestMsgIdRsp::clear_has_latest_msg_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IMGetLatestMsgIdRsp::clear_latest_msg_id() {
  if (latest_msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    latest_msg_id_->clear();
  }
  clear_has_latest_msg_id();
}
inline const ::std::string& IMGetLatestMsgIdRsp::latest_msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
  return *latest_msg_id_;
}
inline void IMGetLatestMsgIdRsp::set_latest_msg_id(const ::std::string& value) {
  set_has_latest_msg_id();
  if (latest_msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    latest_msg_id_ = new ::std::string;
  }
  latest_msg_id_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
}
inline void IMGetLatestMsgIdRsp::set_latest_msg_id(const char* value) {
  set_has_latest_msg_id();
  if (latest_msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    latest_msg_id_ = new ::std::string;
  }
  latest_msg_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
}
inline void IMGetLatestMsgIdRsp::set_latest_msg_id(const char* value, size_t size) {
  set_has_latest_msg_id();
  if (latest_msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    latest_msg_id_ = new ::std::string;
  }
  latest_msg_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
}
inline ::std::string* IMGetLatestMsgIdRsp::mutable_latest_msg_id() {
  set_has_latest_msg_id();
  if (latest_msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    latest_msg_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
  return latest_msg_id_;
}
inline ::std::string* IMGetLatestMsgIdRsp::release_latest_msg_id() {
  clear_has_latest_msg_id();
  if (latest_msg_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = latest_msg_id_;
    latest_msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetLatestMsgIdRsp::set_allocated_latest_msg_id(::std::string* latest_msg_id) {
  if (latest_msg_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete latest_msg_id_;
  }
  if (latest_msg_id) {
    set_has_latest_msg_id();
    latest_msg_id_ = latest_msg_id;
  } else {
    clear_has_latest_msg_id();
    latest_msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
}

// optional bytes attach_data = 20;
inline bool IMGetLatestMsgIdRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMGetLatestMsgIdRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMGetLatestMsgIdRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMGetLatestMsgIdRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetLatestMsgIdRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.attach_data)
  return *attach_data_;
}
inline void IMGetLatestMsgIdRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
inline void IMGetLatestMsgIdRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
inline void IMGetLatestMsgIdRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
inline ::std::string* IMGetLatestMsgIdRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetLatestMsgIdRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetLatestMsgIdRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetLatestMsgIdRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}

// -------------------------------------------------------------------

// IMGetMsgByIdReq

// required uint32 from_company_id = 1;
inline bool IMGetMsgByIdReq::has_from_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMGetMsgByIdReq::set_has_from_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMGetMsgByIdReq::clear_has_from_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMGetMsgByIdReq::clear_from_company_id() {
  from_company_id_ = 0u;
  clear_has_from_company_id();
}
inline ::google::protobuf::uint32 IMGetMsgByIdReq::from_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.from_company_id)
  return from_company_id_;
}
inline void IMGetMsgByIdReq::set_from_company_id(::google::protobuf::uint32 value) {
  set_has_from_company_id();
  from_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.from_company_id)
}

// required uint32 from_user_id = 2;
inline bool IMGetMsgByIdReq::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetMsgByIdReq::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetMsgByIdReq::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetMsgByIdReq::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 IMGetMsgByIdReq::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.from_user_id)
  return from_user_id_;
}
inline void IMGetMsgByIdReq::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.from_user_id)
}

// required uint32 to_company_id = 4;
inline bool IMGetMsgByIdReq::has_to_company_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMGetMsgByIdReq::set_has_to_company_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMGetMsgByIdReq::clear_has_to_company_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMGetMsgByIdReq::clear_to_company_id() {
  to_company_id_ = 0u;
  clear_has_to_company_id();
}
inline ::google::protobuf::uint32 IMGetMsgByIdReq::to_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.to_company_id)
  return to_company_id_;
}
inline void IMGetMsgByIdReq::set_to_company_id(::google::protobuf::uint32 value) {
  set_has_to_company_id();
  to_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.to_company_id)
}

// required uint32 to_user_id = 5;
inline bool IMGetMsgByIdReq::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMGetMsgByIdReq::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMGetMsgByIdReq::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMGetMsgByIdReq::clear_to_user_id() {
  to_user_id_ = 0u;
  clear_has_to_user_id();
}
inline ::google::protobuf::uint32 IMGetMsgByIdReq::to_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.to_user_id)
  return to_user_id_;
}
inline void IMGetMsgByIdReq::set_to_user_id(::google::protobuf::uint32 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.to_user_id)
}

// required .IM.BaseDefine.SessionType session_type = 6;
inline bool IMGetMsgByIdReq::has_session_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMGetMsgByIdReq::set_has_session_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMGetMsgByIdReq::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMGetMsgByIdReq::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::IM::BaseDefine::SessionType IMGetMsgByIdReq::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgByIdReq::set_session_type(::IM::BaseDefine::SessionType value) {
  assert(::IM::BaseDefine::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.session_type)
}

// repeated string msg_id_list = 7;
inline int IMGetMsgByIdReq::msg_id_list_size() const {
  return msg_id_list_.size();
}
inline void IMGetMsgByIdReq::clear_msg_id_list() {
  msg_id_list_.Clear();
}
inline const ::std::string& IMGetMsgByIdReq::msg_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return msg_id_list_.Get(index);
}
inline ::std::string* IMGetMsgByIdReq::mutable_msg_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return msg_id_list_.Mutable(index);
}
inline void IMGetMsgByIdReq::set_msg_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.msg_id_list)
  msg_id_list_.Mutable(index)->assign(value);
}
inline void IMGetMsgByIdReq::set_msg_id_list(int index, const char* value) {
  msg_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgByIdReq.msg_id_list)
}
inline void IMGetMsgByIdReq::set_msg_id_list(int index, const char* value, size_t size) {
  msg_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgByIdReq.msg_id_list)
}
inline ::std::string* IMGetMsgByIdReq::add_msg_id_list() {
  return msg_id_list_.Add();
}
inline void IMGetMsgByIdReq::add_msg_id_list(const ::std::string& value) {
  msg_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:IM.Message.IMGetMsgByIdReq.msg_id_list)
}
inline void IMGetMsgByIdReq::add_msg_id_list(const char* value) {
  msg_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IM.Message.IMGetMsgByIdReq.msg_id_list)
}
inline void IMGetMsgByIdReq::add_msg_id_list(const char* value, size_t size) {
  msg_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IM.Message.IMGetMsgByIdReq.msg_id_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
IMGetMsgByIdReq::msg_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return msg_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
IMGetMsgByIdReq::mutable_msg_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return &msg_id_list_;
}

// optional bytes attach_data = 20;
inline bool IMGetMsgByIdReq::has_attach_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IMGetMsgByIdReq::set_has_attach_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IMGetMsgByIdReq::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IMGetMsgByIdReq::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetMsgByIdReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.attach_data)
  return *attach_data_;
}
inline void IMGetMsgByIdReq::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.attach_data)
}
inline void IMGetMsgByIdReq::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgByIdReq.attach_data)
}
inline void IMGetMsgByIdReq::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgByIdReq.attach_data)
}
inline ::std::string* IMGetMsgByIdReq::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdReq.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetMsgByIdReq::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetMsgByIdReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgByIdReq.attach_data)
}

// -------------------------------------------------------------------

// IMGetMsgByIdRsp

// repeated .IM.BaseDefine.MsgData msg_data = 1;
inline int IMGetMsgByIdRsp::msg_data_size() const {
  return msg_data_.size();
}
inline void IMGetMsgByIdRsp::clear_msg_data() {
  msg_data_.Clear();
}
inline const ::IM::BaseDefine::MsgData& IMGetMsgByIdRsp::msg_data(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.msg_data)
  return msg_data_.Get(index);
}
inline ::IM::BaseDefine::MsgData* IMGetMsgByIdRsp::mutable_msg_data(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdRsp.msg_data)
  return msg_data_.Mutable(index);
}
inline ::IM::BaseDefine::MsgData* IMGetMsgByIdRsp::add_msg_data() {
  // @@protoc_insertion_point(field_add:IM.Message.IMGetMsgByIdRsp.msg_data)
  return msg_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData >&
IMGetMsgByIdRsp::msg_data() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMGetMsgByIdRsp.msg_data)
  return msg_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgData >*
IMGetMsgByIdRsp::mutable_msg_data() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMGetMsgByIdRsp.msg_data)
  return &msg_data_;
}

// optional bytes attach_data = 20;
inline bool IMGetMsgByIdRsp::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMGetMsgByIdRsp::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMGetMsgByIdRsp::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMGetMsgByIdRsp::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& IMGetMsgByIdRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.attach_data)
  return *attach_data_;
}
inline void IMGetMsgByIdRsp::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.attach_data)
}
inline void IMGetMsgByIdRsp::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgByIdRsp.attach_data)
}
inline void IMGetMsgByIdRsp::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgByIdRsp.attach_data)
}
inline ::std::string* IMGetMsgByIdRsp::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdRsp.attach_data)
  return attach_data_;
}
inline ::std::string* IMGetMsgByIdRsp::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IMGetMsgByIdRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgByIdRsp.attach_data)
}

// -------------------------------------------------------------------

// IMP2PCmdMsg

// required uint32 from_company_id = 1;
inline bool IMP2PCmdMsg::has_from_company_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IMP2PCmdMsg::set_has_from_company_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IMP2PCmdMsg::clear_has_from_company_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IMP2PCmdMsg::clear_from_company_id() {
  from_company_id_ = 0u;
  clear_has_from_company_id();
}
inline ::google::protobuf::uint32 IMP2PCmdMsg::from_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMP2PCmdMsg.from_company_id)
  return from_company_id_;
}
inline void IMP2PCmdMsg::set_from_company_id(::google::protobuf::uint32 value) {
  set_has_from_company_id();
  from_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMP2PCmdMsg.from_company_id)
}

// required uint32 from_user_id = 2;
inline bool IMP2PCmdMsg::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IMP2PCmdMsg::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IMP2PCmdMsg::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IMP2PCmdMsg::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 IMP2PCmdMsg::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMP2PCmdMsg.from_user_id)
  return from_user_id_;
}
inline void IMP2PCmdMsg::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMP2PCmdMsg.from_user_id)
}

// required uint32 to_company_id = 3;
inline bool IMP2PCmdMsg::has_to_company_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IMP2PCmdMsg::set_has_to_company_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IMP2PCmdMsg::clear_has_to_company_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IMP2PCmdMsg::clear_to_company_id() {
  to_company_id_ = 0u;
  clear_has_to_company_id();
}
inline ::google::protobuf::uint32 IMP2PCmdMsg::to_company_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMP2PCmdMsg.to_company_id)
  return to_company_id_;
}
inline void IMP2PCmdMsg::set_to_company_id(::google::protobuf::uint32 value) {
  set_has_to_company_id();
  to_company_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMP2PCmdMsg.to_company_id)
}

// required uint32 to_user_id = 4;
inline bool IMP2PCmdMsg::has_to_user_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IMP2PCmdMsg::set_has_to_user_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IMP2PCmdMsg::clear_has_to_user_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IMP2PCmdMsg::clear_to_user_id() {
  to_user_id_ = 0u;
  clear_has_to_user_id();
}
inline ::google::protobuf::uint32 IMP2PCmdMsg::to_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMP2PCmdMsg.to_user_id)
  return to_user_id_;
}
inline void IMP2PCmdMsg::set_to_user_id(::google::protobuf::uint32 value) {
  set_has_to_user_id();
  to_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMP2PCmdMsg.to_user_id)
}

// required .IM.BaseDefine.P2PMsgCmdType p2p_msg_type = 5;
inline bool IMP2PCmdMsg::has_p2p_msg_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IMP2PCmdMsg::set_has_p2p_msg_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IMP2PCmdMsg::clear_has_p2p_msg_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IMP2PCmdMsg::clear_p2p_msg_type() {
  p2p_msg_type_ = 1;
  clear_has_p2p_msg_type();
}
inline ::IM::BaseDefine::P2PMsgCmdType IMP2PCmdMsg::p2p_msg_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMP2PCmdMsg.p2p_msg_type)
  return static_cast< ::IM::BaseDefine::P2PMsgCmdType >(p2p_msg_type_);
}
inline void IMP2PCmdMsg::set_p2p_msg_type(::IM::BaseDefine::P2PMsgCmdType value) {
  assert(::IM::BaseDefine::P2PMsgCmdType_IsValid(value));
  set_has_p2p_msg_type();
  p2p_msg_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMP2PCmdMsg.p2p_msg_type)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace IM

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IM_2eMessage_2eproto__INCLUDED
